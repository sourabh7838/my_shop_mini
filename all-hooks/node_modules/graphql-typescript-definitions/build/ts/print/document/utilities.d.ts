import type { GraphQLCompositeType } from 'graphql';
import type { Field } from 'graphql-tool-utilities';
export declare class ObjectStack {
    private readonly type?;
    private readonly field?;
    private readonly parent?;
    private readonly isFragment;
    private readonly seenFields;
    get name(): string;
    constructor(type?: GraphQLCompositeType | undefined, field?: Field | undefined, parent?: ObjectStack | undefined, isFragment?: boolean);
    nested(field: Field, type: GraphQLCompositeType): ObjectStack;
    fragment(type?: GraphQLCompositeType): ObjectStack;
    sawField(field: Field): void;
    hasSeenField(field: Field): boolean;
}
export declare function upperCaseFirst(input: string): string;
//# sourceMappingURL=utilities.d.ts.map