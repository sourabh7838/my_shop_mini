import * as t from '@babel/types';
import type { GraphQLCompositeType } from 'graphql';
import type { PrintableFieldDetails, Variable } from 'graphql-tool-utilities';
import type { ObjectStack } from './utilities';
import type { OperationContext } from './context';
export declare function tsInterfaceBodyForObjectField({ fields }: PrintableFieldDetails, graphQLType: GraphQLCompositeType | GraphQLCompositeType[], stack: ObjectStack, context: OperationContext, requiresTypename?: boolean): t.TSInterfaceBody;
export declare function variablesInterface(variables: Variable[], context: OperationContext): t.TSInterfaceDeclaration;
//# sourceMappingURL=language.d.ts.map