{"version":3,"file":"touchable.js","sources":["../../../src/components/atoms/touchable.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport {motion, HTMLMotionProps, useAnimationControls} from 'motion/react'\n\nexport const Touchable = ({\n  children,\n  onClick,\n  stopPropagation = false,\n  ...props\n}: HTMLMotionProps<'div'> & {\n  onClick?: React.MouseEventHandler<HTMLDivElement>\n  stopPropagation?: boolean\n}) => {\n  const ref = React.useRef<HTMLDivElement>(null)\n  const controls = useAnimationControls()\n\n  const handleClick = React.useCallback(\n    (event: React.MouseEvent<HTMLDivElement>) => {\n      if (stopPropagation) event.stopPropagation()\n      onClick?.(event)\n    },\n    [stopPropagation, onClick]\n  )\n\n  // Handle animations manually when stopPropagation is true to prevent parent from receiving event\n  React.useEffect(() => {\n    if (!stopPropagation || !ref.current) return\n\n    const element = ref.current\n\n    const handlePointerDown = (event: PointerEvent) => {\n      event.stopImmediatePropagation()\n      event.stopPropagation()\n\n      // Animate to pressed state\n      controls.start({\n        scale: 0.95,\n        opacity: 0.7,\n      })\n    }\n\n    const handlePointerUp = (event: PointerEvent) => {\n      event.stopImmediatePropagation()\n      event.stopPropagation()\n\n      // Animate back to normal state\n      controls.start({\n        scale: 1,\n        opacity: 1,\n      })\n    }\n\n    // Capture pointer event before Motion\n    element.addEventListener('pointerdown', handlePointerDown, true)\n    element.addEventListener('pointerup', handlePointerUp, true)\n\n    return () => {\n      element.removeEventListener('pointerdown', handlePointerDown, true)\n      element.removeEventListener('pointerup', handlePointerUp, true)\n    }\n  }, [stopPropagation, controls])\n\n  return (\n    <motion.div\n      ref={ref}\n      data-touchable=\"true\"\n      className=\"flex w-full\"\n      animate={stopPropagation ? controls : undefined}\n      whileTap={stopPropagation ? undefined : {scale: 0.95, opacity: 0.7}}\n      transition={{\n        scale: {type: 'tween', duration: 0.08, ease: 'linear'},\n        opacity: {type: 'tween', duration: 0.08, ease: 'linear'},\n      }}\n      onClick={handleClick}\n      style={{\n        touchAction: stopPropagation ? 'manipulation' : undefined,\n      }}\n      {...props} // TODO: We may need to filter out some props, as we only need motion props\n    >\n      {children}\n    </motion.div>\n  )\n}\n"],"names":["Touchable","children","onClick","stopPropagation","props","ref","React","controls","useAnimationControls","handleClick","event","element","handlePointerDown","handlePointerUp","jsx","motion"],"mappings":";;;;AAIO,MAAMA,IAAY,CAAC;AAAA,EACxB,UAAAC;AAAA,EACA,SAAAC;AAAA,EACA,iBAAAC,IAAkB;AAAA,EAClB,GAAGC;AACL,MAGM;AACE,QAAAC,IAAMC,EAAM,OAAuB,IAAI,GACvCC,IAAWC,EAAqB,GAEhCC,IAAcH,EAAM;AAAA,IACxB,CAACI,MAA4C;AACvC,MAAAP,OAAuB,gBAAgB,GAC3CD,IAAUQ,CAAK;AAAA,IACjB;AAAA,IACA,CAACP,GAAiBD,CAAO;AAAA,EAC3B;AAGA,SAAAI,EAAM,UAAU,MAAM;AACpB,QAAI,CAACH,KAAmB,CAACE,EAAI,QAAS;AAEtC,UAAMM,IAAUN,EAAI,SAEdO,IAAoB,CAACF,MAAwB;AACjD,MAAAA,EAAM,yBAAyB,GAC/BA,EAAM,gBAAgB,GAGtBH,EAAS,MAAM;AAAA,QACb,OAAO;AAAA,QACP,SAAS;AAAA,MAAA,CACV;AAAA,IACH,GAEMM,IAAkB,CAACH,MAAwB;AAC/C,MAAAA,EAAM,yBAAyB,GAC/BA,EAAM,gBAAgB,GAGtBH,EAAS,MAAM;AAAA,QACb,OAAO;AAAA,QACP,SAAS;AAAA,MAAA,CACV;AAAA,IACH;AAGQ,WAAAI,EAAA,iBAAiB,eAAeC,GAAmB,EAAI,GACvDD,EAAA,iBAAiB,aAAaE,GAAiB,EAAI,GAEpD,MAAM;AACH,MAAAF,EAAA,oBAAoB,eAAeC,GAAmB,EAAI,GAC1DD,EAAA,oBAAoB,aAAaE,GAAiB,EAAI;AAAA,IAChE;AAAA,EAAA,GACC,CAACV,GAAiBI,CAAQ,CAAC,GAG5B,gBAAAO;AAAA,IAACC,EAAO;AAAA,IAAP;AAAA,MACC,KAAAV;AAAA,MACA,kBAAe;AAAA,MACf,WAAU;AAAA,MACV,SAASF,IAAkBI,IAAW;AAAA,MACtC,UAAUJ,IAAkB,SAAY,EAAC,OAAO,MAAM,SAAS,IAAG;AAAA,MAClE,YAAY;AAAA,QACV,OAAO,EAAC,MAAM,SAAS,UAAU,MAAM,MAAM,SAAQ;AAAA,QACrD,SAAS,EAAC,MAAM,SAAS,UAAU,MAAM,MAAM,SAAQ;AAAA,MACzD;AAAA,MACA,SAASM;AAAA,MACT,OAAO;AAAA,QACL,aAAaN,IAAkB,iBAAiB;AAAA,MAClD;AAAA,MACC,GAAGC;AAAA,MAEH,UAAAH;AAAA,IAAA;AAAA,EACH;AAEJ;"}