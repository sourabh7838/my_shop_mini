{"version":3,"file":"useProductVariants.js","sources":["../../../src/hooks/product/useProductVariants.ts"],"sourcesContent":["import {useMemo} from 'react'\n\nimport {useShopActions} from '../../internal/useShopActions'\nimport {useShopActionsPaginatedDataFetching} from '../../internal/useShopActionsPaginatedDataFetching'\nimport {\n  PaginatedDataHookOptionsBase,\n  PaginatedDataHookReturnsBase,\n  ProductVariant,\n} from '../../types'\n\nexport interface UseProductVariantsParams extends PaginatedDataHookOptionsBase {\n  /**\n   * The product ID to fetch variants for.\n   */\n  id: string\n}\n\ninterface UseProductVariantsReturns extends PaginatedDataHookReturnsBase {\n  /**\n   * The product variants returned from the query.\n   */\n  variants: ProductVariant[] | null\n}\n\nexport const useProductVariants = (\n  params: UseProductVariantsParams\n): UseProductVariantsReturns => {\n  const {getProductVariants} = useShopActions()\n  const {skip = false, ...restParams} = params\n\n  const {data, ...rest} = useShopActionsPaginatedDataFetching(\n    getProductVariants,\n    restParams,\n    {\n      skip,\n      hook: 'useProductVariants',\n    }\n  )\n\n  const variants = useMemo(() => {\n    return data ?? null\n  }, [data])\n\n  return {\n    ...rest,\n    variants,\n  }\n}\n"],"names":["useProductVariants","params","getProductVariants","useShopActions","skip","restParams","data","rest","useShopActionsPaginatedDataFetching","variants","useMemo"],"mappings":";;;AAwBa,MAAAA,IAAqB,CAChCC,MAC8B;AACxB,QAAA,EAAC,oBAAAC,EAAkB,IAAIC,EAAe,GACtC,EAAC,MAAAC,IAAO,IAAO,GAAGC,EAAc,IAAAJ,GAEhC,EAAC,MAAAK,GAAM,GAAGC,EAAA,IAAQC;AAAA,IACtBN;AAAA,IACAG;AAAA,IACA;AAAA,MACE,MAAAD;AAAA,MACA,MAAM;AAAA,IAAA;AAAA,EAEV,GAEMK,IAAWC,EAAQ,MAChBJ,KAAQ,MACd,CAACA,CAAI,CAAC;AAEF,SAAA;AAAA,IACL,GAAGC;AAAA,IACH,UAAAE;AAAA,EACF;AACF;"}