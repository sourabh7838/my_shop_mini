import { getFinalKeyframe as c } from "../animators/waapi/utils/get-final-keyframe.js";
import { getDefaultTransition as A } from "../utils/default-transitions.js";
import { isTransitionDefined as D } from "../utils/is-transition-defined.js";
import { getValueTransition as g } from "../../../../../motion-dom/dist/es/animation/utils/get-value-transition.js";
import { secondsToMilliseconds as f } from "../../../../../motion-utils/dist/es/time-conversion.js";
import { MotionGlobalConfig as d } from "../../../../../motion-utils/dist/es/global-config.js";
import { frame as k } from "../../../../../motion-dom/dist/es/frameloop/frame.js";
import { JSAnimation as C } from "../../../../../motion-dom/dist/es/animation/JSAnimation.js";
import { AsyncMotionValueAnimation as T } from "../../../../../motion-dom/dist/es/animation/AsyncMotionValueAnimation.js";
const h = (i, n, a, r = {}, p, s) => (y) => {
  const o = g(r, i) || {}, u = o.delay || r.delay || 0;
  let { elapsed: l = 0 } = r;
  l = l - f(u);
  const e = {
    keyframes: Array.isArray(a) ? a : [null, a],
    ease: "easeOut",
    velocity: n.getVelocity(),
    ...o,
    delay: -l,
    onUpdate: (t) => {
      n.set(t), o.onUpdate && o.onUpdate(t);
    },
    onComplete: () => {
      y(), o.onComplete && o.onComplete();
    },
    name: i,
    motionValue: n,
    element: s ? void 0 : p
  };
  D(o) || Object.assign(e, A(i, e)), e.duration && (e.duration = f(e.duration)), e.repeatDelay && (e.repeatDelay = f(e.repeatDelay)), e.from !== void 0 && (e.keyframes[0] = e.from);
  let m = !1;
  if ((e.type === !1 || e.duration === 0 && !e.repeatDelay) && (e.duration = 0, e.delay === 0 && (m = !0)), (d.instantAnimations || d.skipAnimations) && (m = !0, e.duration = 0, e.delay = 0), e.allowFlatten = !o.type && !o.ease, m && !s && n.get() !== void 0) {
    const t = c(e.keyframes, o);
    if (t !== void 0) {
      k.update(() => {
        e.onUpdate(t), e.onComplete();
      });
      return;
    }
  }
  return o.isSync ? new C(e) : new T(e);
};
export {
  h as animateMotionValue
};
//# sourceMappingURL=motion-value.js.map
