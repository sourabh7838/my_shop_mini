{"version":3,"file":"parse-transform.js","sources":["../../../../../../../../../../../../../node_modules/.pnpm/motion@12.17.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/render/dom/parse-transform.mjs"],"sourcesContent":["const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n"],"names":["radToDeg","rad","rotate","v","angle","rebaseAngle","matrix2dParsers","rotateZ","scaleX","scaleY","matrix3dParsers","defaultTransformValue","name","parseValueFromTransform","transform","matrix3dMatch","parsers","match","matrix2dMatch","valueParser","values","convertTransformToNumber","readTransformValue","instance","value"],"mappings":"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","x_google_ignoreList":[0]}