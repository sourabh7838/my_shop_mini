{"version":3,"file":"use-render.js","sources":["../../../../../../../../../../../../../node_modules/.pnpm/motion@12.17.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/dom/use-render.mjs"],"sourcesContent":["import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { isMotionValue } from '../../../../../motion-dom/dist/es/value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n"],"names":["createUseRender","forwardMotionProps","Component","props","ref","latestValues","isStatic","visualProps","isSVGComponent","useSVGProps","useHTMLProps","filteredProps","filterProps","elementProps","Fragment","children","renderedChildren","useMemo","isMotionValue","createElement"],"mappings":";;;;;;AAOA,SAASA,EAAgBC,IAAqB,IAAO;AAsBjD,SArBkB,CAACC,GAAWC,GAAOC,GAAK,EAAE,cAAAC,EAAc,GAAEC,MAAa;AAIrE,UAAMC,KAHiBC,EAAeN,CAAS,IACzCO,IACAC,GAC6BP,GAAOE,GAAcC,GAAUJ,CAAS,GACrES,IAAgBC,EAAYT,GAAO,OAAOD,KAAc,UAAUD,CAAkB,GACpFY,IAAeX,MAAcY,IAC7B,EAAE,GAAGH,GAAe,GAAGJ,GAAa,KAAAH,EAAG,IACvC,CAAE,GAMF,EAAE,UAAAW,EAAQ,IAAKZ,GACfa,IAAmBC,EAAQ,MAAOC,EAAcH,CAAQ,IAAIA,EAAS,QAAQA,GAAW,CAACA,CAAQ,CAAC;AACxG,WAAOI,EAAcjB,GAAW;AAAA,MAC5B,GAAGW;AAAA,MACH,UAAUG;AAAA,IACtB,CAAS;AAAA,EACJ;AAEL;","x_google_ignoreList":[0]}