{"version":3,"file":"path.js","sources":["../../../../../../../../../../../../../../node_modules/.pnpm/motion@12.17.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/path.mjs"],"sourcesContent":["import { px } from '../../../../../../motion-dom/dist/es/value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n"],"names":["dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","offset","useDashCase","keys","px","pathLength","pathSpacing"],"mappings":";AAEA,MAAMA,IAAW;AAAA,EACb,QAAQ;AAAA,EACR,OAAO;AACX,GACMC,IAAY;AAAA,EACd,QAAQ;AAAA,EACR,OAAO;AACX;AAQA,SAASC,EAAaC,GAAOC,GAAQC,IAAU,GAAGC,IAAS,GAAGC,IAAc,IAAM;AAE9E,EAAAJ,EAAM,aAAa;AAGnB,QAAMK,IAAOD,IAAcP,IAAWC;AAEtC,EAAAE,EAAMK,EAAK,MAAM,IAAIC,EAAG,UAAU,CAACH,CAAM;AAEzC,QAAMI,IAAaD,EAAG,UAAUL,CAAM,GAChCO,IAAcF,EAAG,UAAUJ,CAAO;AACxC,EAAAF,EAAMK,EAAK,KAAK,IAAI,GAAGE,CAAU,IAAIC,CAAW;AACpD;","x_google_ignoreList":[0]}