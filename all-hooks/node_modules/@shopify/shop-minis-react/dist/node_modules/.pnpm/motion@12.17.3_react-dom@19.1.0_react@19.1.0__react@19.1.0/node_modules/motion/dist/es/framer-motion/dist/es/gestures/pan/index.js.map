{"version":3,"file":"index.js","sources":["../../../../../../../../../../../../../node_modules/.pnpm/motion@12.17.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/gestures/pan/index.mjs"],"sourcesContent":["import { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { frame } from '../../../../../motion-dom/dist/es/frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n"],"names":["asyncHandler","handler","event","info","frame","PanGesture","Feature","noop","pointerDownEvent","PanSession","getContextWindow","onPanSessionStart","onPanStart","onPan","onPanEnd","addPointerEvent"],"mappings":";;;;;;AAOA,MAAMA,IAAe,CAACC,MAAY,CAACC,GAAOC,MAAS;AAC/C,EAAIF,KACAG,EAAM,WAAW,MAAMH,EAAQC,GAAOC,CAAI,CAAC;AAEnD;AACA,MAAME,UAAmBC,EAAQ;AAAA,EAC7B,cAAc;AACV,UAAM,GAAG,SAAS,GAClB,KAAK,4BAA4BC;AAAA,EACzC;AAAA,EACI,cAAcC,GAAkB;AAC5B,SAAK,UAAU,IAAIC,EAAWD,GAAkB,KAAK,qBAAqB;AAAA,MACtE,oBAAoB,KAAK,KAAK,sBAAuB;AAAA,MACrD,eAAeE,EAAiB,KAAK,IAAI;AAAA,IACrD,CAAS;AAAA,EACT;AAAA,EACI,oBAAoB;AAChB,UAAM,EAAE,mBAAAC,GAAmB,YAAAC,GAAY,OAAAC,GAAO,UAAAC,EAAQ,IAAK,KAAK,KAAK,SAAU;AAC/E,WAAO;AAAA,MACH,gBAAgBd,EAAaW,CAAiB;AAAA,MAC9C,SAASX,EAAaY,CAAU;AAAA,MAChC,QAAQC;AAAA,MACR,OAAO,CAACX,GAAOC,MAAS;AACpB,eAAO,KAAK,SACRW,KACAV,EAAM,WAAW,MAAMU,EAASZ,GAAOC,CAAI,CAAC;AAAA,MAEnD;AAAA,IACJ;AAAA,EACT;AAAA,EACI,QAAQ;AACJ,SAAK,4BAA4BY,EAAgB,KAAK,KAAK,SAAS,eAAe,CAACb,MAAU,KAAK,cAAcA,CAAK,CAAC;AAAA,EAC/H;AAAA,EACI,SAAS;AACL,SAAK,WAAW,KAAK,QAAQ,eAAe,KAAK,mBAAmB;AAAA,EAC5E;AAAA,EACI,UAAU;AACN,SAAK,0BAA2B,GAChC,KAAK,WAAW,KAAK,QAAQ,IAAK;AAAA,EAC1C;AACA;","x_google_ignoreList":[0]}