{"version":3,"file":"HTMLVisualElement.js","sources":["../../../../../../../../../../../../../node_modules/.pnpm/motion@12.17.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/html/HTMLVisualElement.mjs"],"sourcesContent":["import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { transformProps } from '../../../../../motion-dom/dist/es/render/utils/keys-transform.mjs';\nimport { defaultTransformValue, readTransformValue } from '../../../../../motion-dom/dist/es/render/dom/parse-transform.mjs';\nimport { isCSSVariableName } from '../../../../../motion-dom/dist/es/animation/utils/is-css-variable.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n"],"names":["getComputedStyle","element","HTMLVisualElement","DOMVisualElement","renderHTML","instance","key","transformProps","defaultTransformValue","readTransformValue","computedStyle","value","isCSSVariableName","transformPagePoint","measureViewportBox","renderState","latestValues","props","buildHTMLStyles","prevProps","visualElement","scrapeMotionValuesFromProps"],"mappings":";;;;;;;;AASA,SAASA,EAAiBC,GAAS;AAC/B,SAAO,OAAO,iBAAiBA,CAAO;AAC1C;AACA,MAAMC,UAA0BC,EAAiB;AAAA,EAC7C,cAAc;AACV,UAAM,GAAG,SAAS,GAClB,KAAK,OAAO,QACZ,KAAK,iBAAiBC;AAAA,EAC9B;AAAA,EACI,sBAAsBC,GAAUC,GAAK;AACjC,QAAIC,EAAe,IAAID,CAAG;AACtB,aAAO,KAAK,YAAY,eAClBE,EAAsBF,CAAG,IACzBG,EAAmBJ,GAAUC,CAAG;AAErC;AACD,YAAMI,IAAgBV,EAAiBK,CAAQ,GACzCM,KAASC,EAAkBN,CAAG,IAC9BI,EAAc,iBAAiBJ,CAAG,IAClCI,EAAcJ,CAAG,MAAM;AAC7B,aAAO,OAAOK,KAAU,WAAWA,EAAM,KAAM,IAAGA;AAAA,IAC9D;AAAA,EACA;AAAA,EACI,2BAA2BN,GAAU,EAAE,oBAAAQ,KAAsB;AACzD,WAAOC,EAAmBT,GAAUQ,CAAkB;AAAA,EAC9D;AAAA,EACI,MAAME,GAAaC,GAAcC,GAAO;AACpC,IAAAC,EAAgBH,GAAaC,GAAcC,EAAM,iBAAiB;AAAA,EAC1E;AAAA,EACI,4BAA4BA,GAAOE,GAAWC,GAAe;AACzD,WAAOC,EAA4BJ,GAAOE,GAAWC,CAAa;AAAA,EAC1E;AACA;","x_google_ignoreList":[0]}