{"version":3,"file":"index.js","sources":["../../../../../../../../../../../../../../node_modules/.pnpm/motion@12.17.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/motion/features/viewport/index.mjs"],"sourcesContent":["import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n"],"names":["thresholdNames","InViewFeature","Feature","viewport","root","rootMargin","amount","once","options","onIntersectionUpdate","entry","isIntersecting","onViewportEnter","onViewportLeave","callback","observeIntersection","props","prevProps","hasViewportOptionChanged","prevViewport","name"],"mappings":";;AAGA,MAAMA,IAAiB;AAAA,EACnB,MAAM;AAAA,EACN,KAAK;AACT;AACA,MAAMC,UAAsBC,EAAQ;AAAA,EAChC,cAAc;AACV,UAAM,GAAG,SAAS,GAClB,KAAK,iBAAiB,IACtB,KAAK,WAAW;AAAA,EACxB;AAAA,EACI,gBAAgB;AACZ,SAAK,QAAS;AACd,UAAM,EAAE,UAAAC,IAAW,CAAE,EAAA,IAAK,KAAK,KAAK,SAAU,GACxC,EAAE,MAAAC,GAAM,QAAQC,GAAY,QAAAC,IAAS,QAAQ,MAAAC,EAAI,IAAKJ,GACtDK,IAAU;AAAA,MACZ,MAAMJ,IAAOA,EAAK,UAAU;AAAA,MAC5B,YAAAC;AAAA,MACA,WAAW,OAAOC,KAAW,WAAWA,IAASN,EAAeM,CAAM;AAAA,IACzE,GACKG,IAAuB,CAACC,MAAU;AACpC,YAAM,EAAE,gBAAAC,EAAc,IAAKD;AAW3B,UAPI,KAAK,aAAaC,MAEtB,KAAK,WAAWA,GAKZJ,KAAQ,CAACI,KAAkB,KAAK;AAChC;AAEC,MAAIA,MACL,KAAK,iBAAiB,KAEtB,KAAK,KAAK,kBACV,KAAK,KAAK,eAAe,UAAU,eAAeA,CAAc;AAMpE,YAAM,EAAE,iBAAAC,GAAiB,iBAAAC,EAAe,IAAK,KAAK,KAAK,SAAU,GAC3DC,IAAWH,IAAiBC,IAAkBC;AACpD,MAAAC,KAAYA,EAASJ,CAAK;AAAA,IAC7B;AACD,WAAOK,EAAoB,KAAK,KAAK,SAASP,GAASC,CAAoB;AAAA,EACnF;AAAA,EACI,QAAQ;AACJ,SAAK,cAAe;AAAA,EAC5B;AAAA,EACI,SAAS;AACL,QAAI,OAAO,uBAAyB;AAChC;AACJ,UAAM,EAAE,OAAAO,GAAO,WAAAC,EAAW,IAAG,KAAK;AAElC,IAD0B,CAAC,UAAU,UAAU,MAAM,EAAE,KAAKC,EAAyBF,GAAOC,CAAS,CAAC,KAElG,KAAK,cAAe;AAAA,EAEhC;AAAA,EACI,UAAU;AAAA,EAAA;AACd;AACA,SAASC,EAAyB,EAAE,UAAAf,IAAW,GAAI,GAAE,EAAE,UAAUgB,IAAe,GAAI,IAAG,IAAI;AACvF,SAAO,CAACC,MAASjB,EAASiB,CAAI,MAAMD,EAAaC,CAAI;AACzD;","x_google_ignoreList":[0]}