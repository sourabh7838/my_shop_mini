import { extractEventInfo as m } from "../events/event-info.js";
import { Feature as s } from "../motion/features/Feature.js";
import { hover as u } from "../../../../motion-dom/dist/es/gestures/hover.js";
import { frame as c } from "../../../../motion-dom/dist/es/frameloop/frame.js";
function a(e, t, r) {
  const { props: o } = e;
  e.animationState && o.whileHover && e.animationState.setActive("whileHover", r === "Start");
  const n = "onHover" + r, i = o[n];
  i && c.postRender(() => i(t, m(t)));
}
class d extends s {
  mount() {
    const { current: t } = this.node;
    t && (this.unmount = u(t, (r, o) => (a(this.node, o, "Start"), (n) => a(this.node, n, "End"))));
  }
  unmount() {
  }
}
export {
  d as HoverGesture
};
//# sourceMappingURL=hover.js.map
