{"version":3,"file":"scale-border-radius.js","sources":["../../../../../../../../../../../../../node_modules/.pnpm/motion@12.17.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-border-radius.mjs"],"sourcesContent":["import { px } from '../../../../../motion-dom/dist/es/value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n"],"names":["pixelsToPercent","pixels","axis","correctBorderRadius","latest","node","px","x","y"],"mappings":";AAEA,SAASA,EAAgBC,GAAQC,GAAM;AACnC,SAAIA,EAAK,QAAQA,EAAK,MACX,IACHD,KAAUC,EAAK,MAAMA,EAAK,OAAQ;AAC9C;AAQK,MAACC,IAAsB;AAAA,EACxB,SAAS,CAACC,GAAQC,MAAS;AACvB,QAAI,CAACA,EAAK;AACN,aAAOD;AAKX,QAAI,OAAOA,KAAW;AAClB,UAAIE,EAAG,KAAKF,CAAM;AACd,QAAAA,IAAS,WAAWA,CAAM;AAAA;AAG1B,eAAOA;AAOf,UAAMG,IAAIP,EAAgBI,GAAQC,EAAK,OAAO,CAAC,GACzCG,IAAIR,EAAgBI,GAAQC,EAAK,OAAO,CAAC;AAC/C,WAAO,GAAGE,CAAC,KAAKC,CAAC;AAAA,EACpB;AACL;","x_google_ignoreList":[0]}