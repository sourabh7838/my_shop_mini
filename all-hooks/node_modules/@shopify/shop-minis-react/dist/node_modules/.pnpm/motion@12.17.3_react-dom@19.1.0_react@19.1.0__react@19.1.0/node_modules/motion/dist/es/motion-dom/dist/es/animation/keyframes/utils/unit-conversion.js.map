{"version":3,"file":"unit-conversion.js","sources":["../../../../../../../../../../../../../../node_modules/.pnpm/motion@12.17.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs"],"sourcesContent":["import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n"],"names":["isNumOrPxType","v","number","px","transformKeys","nonTranslationalTransformKeys","transformPropOrder","key","removeNonTranslationalTransform","visualElement","removedTransforms","value","positionalValues","x","paddingLeft","paddingRight","y","paddingTop","paddingBottom","_bbox","top","left","transform","parseValueFromTransform"],"mappings":";;;;AAKK,MAACA,IAAgB,CAACC,MAAMA,MAAMC,KAAUD,MAAME,GAC7CC,IAAgB,oBAAI,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,GACvCC,IAAgCC,EAAmB,OAAO,CAACC,MAAQ,CAACH,EAAc,IAAIG,CAAG,CAAC;AAChG,SAASC,EAAgCC,GAAe;AACpD,QAAMC,IAAoB,CAAE;AAC5B,SAAAL,EAA8B,QAAQ,CAACE,MAAQ;AAC3C,UAAMI,IAAQF,EAAc,SAASF,CAAG;AACxC,IAAII,MAAU,WACVD,EAAkB,KAAK,CAACH,GAAKI,EAAM,IAAK,CAAA,CAAC,GACzCA,EAAM,IAAIJ,EAAI,WAAW,OAAO,IAAI,IAAI,CAAC;AAAA,EAErD,CAAK,GACMG;AACX;AACK,MAACE,IAAmB;AAAA;AAAA,EAErB,OAAO,CAAC,EAAE,GAAAC,EAAG,GAAE,EAAE,aAAAC,IAAc,KAAK,cAAAC,IAAe,IAAG,MAAOF,EAAE,MAAMA,EAAE,MAAM,WAAWC,CAAW,IAAI,WAAWC,CAAY;AAAA,EAC9H,QAAQ,CAAC,EAAE,GAAAC,EAAG,GAAE,EAAE,YAAAC,IAAa,KAAK,eAAAC,IAAgB,IAAG,MAAOF,EAAE,MAAMA,EAAE,MAAM,WAAWC,CAAU,IAAI,WAAWC,CAAa;AAAA,EAC/H,KAAK,CAACC,GAAO,EAAE,KAAAC,EAAG,MAAO,WAAWA,CAAG;AAAA,EACvC,MAAM,CAACD,GAAO,EAAE,MAAAE,EAAI,MAAO,WAAWA,CAAI;AAAA,EAC1C,QAAQ,CAAC,EAAE,GAAAL,EAAG,GAAE,EAAE,KAAAI,EAAK,MAAK,WAAWA,CAAG,KAAKJ,EAAE,MAAMA,EAAE;AAAA,EACzD,OAAO,CAAC,EAAE,GAAAH,EAAG,GAAE,EAAE,MAAAQ,EAAM,MAAK,WAAWA,CAAI,KAAKR,EAAE,MAAMA,EAAE;AAAA;AAAA,EAE1D,GAAG,CAACM,GAAO,EAAE,WAAAG,EAAW,MAAKC,EAAwBD,GAAW,GAAG;AAAA,EACnE,GAAG,CAACH,GAAO,EAAE,WAAAG,EAAW,MAAKC,EAAwBD,GAAW,GAAG;AACvE;AAEAV,EAAiB,aAAaA,EAAiB;AAC/CA,EAAiB,aAAaA,EAAiB;","x_google_ignoreList":[0]}