{"version":3,"file":"css-variables-conversion.js","sources":["../../../../../../../../../../../../../node_modules/.pnpm/motion@12.17.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs"],"sourcesContent":["import { isCSSVariableToken } from './is-css-variable.mjs';\nimport { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { isNumericalString } from '../../../../../motion-utils/dist/es/is-numerical-string.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n"],"names":["splitCSSVariableRegex","parseCSSVariable","current","match","token1","token2","fallback","maxDepth","getVariableValue","element","depth","invariant","token","resolved","trimmed","isNumericalString","isCSSVariableToken"],"mappings":";;;AAaA,MAAMA;AAAA;AAAA,EAEN;AAAA;AACA,SAASC,EAAiBC,GAAS;AAC/B,QAAMC,IAAQH,EAAsB,KAAKE,CAAO;AAChD,MAAI,CAACC;AACD,WAAO,CAAG,CAAA;AACd,QAAM,GAAGC,GAAQC,GAAQC,CAAQ,IAAIH;AACrC,SAAO,CAAC,KAAKC,KAAUC,CAAM,IAAIC,CAAQ;AAC7C;AACA,MAAMC,IAAW;AACjB,SAASC,EAAiBN,GAASO,GAASC,IAAQ,GAAG;AACnD,EAAAC,EAAUD,KAASH,GAAU,yDAAyDL,CAAO,sDAAsD;AACnJ,QAAM,CAACU,GAAON,CAAQ,IAAIL,EAAiBC,CAAO;AAElD,MAAI,CAACU;AACD;AAEJ,QAAMC,IAAW,OAAO,iBAAiBJ,CAAO,EAAE,iBAAiBG,CAAK;AACxE,MAAIC,GAAU;AACV,UAAMC,IAAUD,EAAS,KAAM;AAC/B,WAAOE,EAAkBD,CAAO,IAAI,WAAWA,CAAO,IAAIA;AAAA,EAClE;AACI,SAAOE,EAAmBV,CAAQ,IAC5BE,EAAiBF,GAAUG,GAASC,IAAQ,CAAC,IAC7CJ;AACV;","x_google_ignoreList":[0]}