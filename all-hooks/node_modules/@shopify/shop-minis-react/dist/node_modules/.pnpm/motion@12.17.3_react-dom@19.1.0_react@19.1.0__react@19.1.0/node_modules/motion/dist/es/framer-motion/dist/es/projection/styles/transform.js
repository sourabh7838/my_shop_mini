function X(s, n, e) {
  let t = "";
  const o = s.x.translate / n.x, i = s.y.translate / n.y, $ = e?.z || 0;
  if ((o || i || $) && (t = `translate3d(${o}px, ${i}px, ${$}px) `), (n.x !== 1 || n.y !== 1) && (t += `scale(${1 / n.x}, ${1 / n.y}) `), e) {
    const { transformPerspective: f, rotate: x, rotateX: c, rotateY: p, skewX: y, skewY: g } = e;
    f && (t = `perspective(${f}px) ${t}`), x && (t += `rotate(${x}deg) `), c && (t += `rotateX(${c}deg) `), p && (t += `rotateY(${p}deg) `), y && (t += `skewX(${y}deg) `), g && (t += `skewY(${g}deg) `);
  }
  const a = s.x.scale * n.x, r = s.y.scale * n.y;
  return (a !== 1 || r !== 1) && (t += `scale(${a}, ${r})`), t || "none";
}
export {
  X as buildProjectionTransform
};
//# sourceMappingURL=transform.js.map
