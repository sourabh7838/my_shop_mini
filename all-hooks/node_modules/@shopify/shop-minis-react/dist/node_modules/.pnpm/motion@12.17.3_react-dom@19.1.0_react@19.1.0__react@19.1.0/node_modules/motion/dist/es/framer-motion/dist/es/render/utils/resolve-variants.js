function o(c) {
  const t = [{}, {}];
  return c?.values.forEach((r, e) => {
    t[0][e] = r.get(), t[1][e] = r.getVelocity();
  }), t;
}
function s(c, t, r, e) {
  if (typeof t == "function") {
    const [a, u] = o(e);
    t = t(r !== void 0 ? r : c.custom, a, u);
  }
  if (typeof t == "string" && (t = c.variants && c.variants[t]), typeof t == "function") {
    const [a, u] = o(e);
    t = t(r !== void 0 ? r : c.custom, a, u);
  }
  return t;
}
export {
  s as resolveVariantFromProps
};
//# sourceMappingURL=resolve-variants.js.map
