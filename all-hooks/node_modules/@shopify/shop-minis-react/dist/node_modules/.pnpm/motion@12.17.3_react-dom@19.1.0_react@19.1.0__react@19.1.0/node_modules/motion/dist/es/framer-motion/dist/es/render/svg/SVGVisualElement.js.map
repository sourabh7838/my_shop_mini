{"version":3,"file":"SVGVisualElement.js","sources":["../../../../../../../../../../../../../node_modules/.pnpm/motion@12.17.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/render/svg/SVGVisualElement.mjs"],"sourcesContent":["import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { transformProps } from '../../../../../motion-dom/dist/es/render/utils/keys-transform.mjs';\nimport { getDefaultValueType } from '../../../../../motion-dom/dist/es/value/types/maps/defaults.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n"],"names":["SVGVisualElement","DOMVisualElement","createBox","props","key","instance","transformProps","defaultType","getDefaultValueType","camelCaseAttributes","camelToDash","prevProps","visualElement","scrapeMotionValuesFromProps","renderState","latestValues","buildSVGAttrs","styleProp","projection","renderSVG","isSVGTag"],"mappings":";;;;;;;;;;AAWA,MAAMA,UAAyBC,EAAiB;AAAA,EAC5C,cAAc;AACV,UAAM,GAAG,SAAS,GAClB,KAAK,OAAO,OACZ,KAAK,WAAW,IAChB,KAAK,6BAA6BC;AAAA,EAC1C;AAAA,EACI,uBAAuBC,GAAOC,GAAK;AAC/B,WAAOD,EAAMC,CAAG;AAAA,EACxB;AAAA,EACI,sBAAsBC,GAAUD,GAAK;AACjC,QAAIE,EAAe,IAAIF,CAAG,GAAG;AACzB,YAAMG,IAAcC,EAAoBJ,CAAG;AAC3C,aAAOG,KAAcA,EAAY,WAAW;AAAA,IACxD;AACQ,WAAAH,IAAOK,EAAoB,IAAIL,CAAG,IAAuBA,IAAnBM,EAAYN,CAAG,GAC9CC,EAAS,aAAaD,CAAG;AAAA,EACxC;AAAA,EACI,4BAA4BD,GAAOQ,GAAWC,GAAe;AACzD,WAAOC,EAA4BV,GAAOQ,GAAWC,CAAa;AAAA,EAC1E;AAAA,EACI,MAAME,GAAaC,GAAcZ,GAAO;AACpC,IAAAa,EAAcF,GAAaC,GAAc,KAAK,UAAUZ,EAAM,mBAAmBA,EAAM,KAAK;AAAA,EACpG;AAAA,EACI,eAAeE,GAAUS,GAAaG,GAAWC,GAAY;AACzD,IAAAC,EAAUd,GAAUS,GAAaG,GAAWC,CAAU;AAAA,EAC9D;AAAA,EACI,MAAMb,GAAU;AACZ,SAAK,WAAWe,EAASf,EAAS,OAAO,GACzC,MAAM,MAAMA,CAAQ;AAAA,EAC5B;AACA;","x_google_ignoreList":[0]}