{"version":3,"file":"NativeAnimation.js","sources":["../../../../../../../../../../../../node_modules/.pnpm/motion@12.17.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/motion-dom/dist/es/animation/NativeAnimation.mjs"],"sourcesContent":["import { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\nimport { invariant } from '../../../../motion-utils/dist/es/errors.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n"],"names":["NativeAnimation","WithPromise","options","element","name","keyframes","pseudoElement","allowFlatten","finalKeyframe","onComplete","invariant","transition","applyGeneratorOptions","startWaapiAnimation","keyframe","getFinalKeyframe","setStyle","state","duration","millisecondsToSeconds","newTime","secondsToMilliseconds","newSpeed","newStartTime","timeline","observe","supportsScrollTimeline","noop"],"mappings":";;;;;;;;;AAaA,MAAMA,UAAwBC,EAAY;AAAA,EACtC,YAAYC,GAAS;AAIjB,QAHA,MAAO,GACP,KAAK,eAAe,MACpB,KAAK,YAAY,IACb,CAACA;AACD;AACJ,UAAM,EAAE,SAAAC,GAAS,MAAAC,GAAM,WAAAC,GAAW,eAAAC,GAAe,cAAAC,IAAe,IAAO,eAAAC,GAAe,YAAAC,EAAU,IAAMP;AACtG,SAAK,kBAAkB,EAAQI,GAC/B,KAAK,eAAeC,GACpB,KAAK,UAAUL,GACfQ,EAAU,OAAOR,EAAQ,QAAS,UAAU,kGAAkG;AAC9I,UAAMS,IAAaC,EAAsBV,CAAO;AAChD,SAAK,YAAYW,EAAoBV,GAASC,GAAMC,GAAWM,GAAYL,CAAa,GACpFK,EAAW,aAAa,MACxB,KAAK,UAAU,MAAO,GAE1B,KAAK,UAAU,WAAW,MAAM;AAE5B,UADA,KAAK,eAAe,KAAK,MACrB,CAACL,GAAe;AAChB,cAAMQ,IAAWC,EAAiBV,GAAW,KAAK,SAASG,GAAe,KAAK,KAAK;AACpF,QAAI,KAAK,oBACL,KAAK,kBAAkBM,CAAQ,IAO/BE,EAASb,GAASC,GAAMU,CAAQ,GAEpC,KAAK,UAAU,OAAQ;AAAA,MACvC;AACY,MAAAL,IAAc,GACd,KAAK,eAAgB;AAAA,IACxB;AAAA,EACT;AAAA,EACI,OAAO;AACH,IAAI,KAAK,cAET,KAAK,UAAU,KAAM,GACjB,KAAK,UAAU,cACf,KAAK,eAAgB;AAAA,EAEjC;AAAA,EACI,QAAQ;AACJ,SAAK,UAAU,MAAO;AAAA,EAC9B;AAAA,EACI,WAAW;AACP,SAAK,UAAU,SAAU;AAAA,EACjC;AAAA,EACI,SAAS;AACL,QAAI;AACA,WAAK,UAAU,OAAQ;AAAA,IACnC,QACkB;AAAA,IAAA;AAAA,EAClB;AAAA,EACI,OAAO;AACH,QAAI,KAAK;AACL;AACJ,SAAK,YAAY;AACjB,UAAM,EAAE,OAAAQ,EAAK,IAAK;AAClB,IAAIA,MAAU,UAAUA,MAAU,eAG9B,KAAK,oBACL,KAAK,kBAAmB,IAGxB,KAAK,aAAc,GAElB,KAAK,mBACN,KAAK,OAAQ;AAAA,EACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaI,eAAe;AACX,IAAK,KAAK,mBACN,KAAK,UAAU,eAAgB;AAAA,EAE3C;AAAA,EACI,IAAI,WAAW;AACX,UAAMC,IAAW,KAAK,UAAU,QAAQ,oBAAiB,EAAK,YAAY;AAC1E,WAAOC,EAAsB,OAAOD,CAAQ,CAAC;AAAA,EACrD;AAAA,EACI,IAAI,OAAO;AACP,WAAOC,EAAsB,OAAO,KAAK,UAAU,WAAW,KAAK,CAAC;AAAA,EAC5E;AAAA,EACI,IAAI,KAAKC,GAAS;AACd,SAAK,eAAe,MACpB,KAAK,UAAU,cAAcC,EAAsBD,CAAO;AAAA,EAClE;AAAA;AAAA;AAAA;AAAA;AAAA,EAKI,IAAI,QAAQ;AACR,WAAO,KAAK,UAAU;AAAA,EAC9B;AAAA,EACI,IAAI,MAAME,GAAU;AAEhB,IAAIA,IAAW,MACX,KAAK,eAAe,OACxB,KAAK,UAAU,eAAeA;AAAA,EACtC;AAAA,EACI,IAAI,QAAQ;AACR,WAAO,KAAK,iBAAiB,OACvB,aACA,KAAK,UAAU;AAAA,EAC7B;AAAA,EACI,IAAI,YAAY;AACZ,WAAO,OAAO,KAAK,UAAU,SAAS;AAAA,EAC9C;AAAA,EACI,IAAI,UAAUC,GAAc;AACxB,SAAK,UAAU,YAAYA;AAAA,EACnC;AAAA;AAAA;AAAA;AAAA,EAII,eAAe,EAAE,UAAAC,GAAU,SAAAC,KAAW;AAKlC,WAJI,KAAK,gBACL,KAAK,UAAU,QAAQ,aAAa,EAAE,QAAQ,UAAU,GAE5D,KAAK,UAAU,WAAW,MACtBD,KAAYE,OACZ,KAAK,UAAU,WAAWF,GACnBG,KAGAF,EAAQ,IAAI;AAAA,EAE/B;AACA;","x_google_ignoreList":[0]}