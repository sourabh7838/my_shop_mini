{"version":3,"file":"motion-value.js","sources":["../../../../../../../../../../../../../node_modules/.pnpm/motion@12.17.3_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/motion-value.mjs"],"sourcesContent":["import { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\nimport { getValueTransition } from '../../../../../motion-dom/dist/es/animation/utils/get-value-transition.mjs';\nimport { secondsToMilliseconds } from '../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { MotionGlobalConfig } from '../../../../../motion-utils/dist/es/global-config.mjs';\nimport { frame } from '../../../../../motion-dom/dist/es/frameloop/frame.mjs';\nimport { JSAnimation } from '../../../../../motion-dom/dist/es/animation/JSAnimation.mjs';\nimport { AsyncMotionValueAnimation } from '../../../../../motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n"],"names":["animateMotionValue","name","value","target","transition","element","isHandoff","onComplete","valueTransition","getValueTransition","delay","elapsed","secondsToMilliseconds","options","v","isTransitionDefined","getDefaultTransition","shouldSkip","MotionGlobalConfig","finalKeyframe","getFinalKeyframe","frame","JSAnimation","AsyncMotionValueAnimation"],"mappings":";;;;;;;;;AAUK,MAACA,IAAqB,CAACC,GAAMC,GAAOC,GAAQC,IAAa,CAAA,GAAIC,GAASC,MAAc,CAACC,MAAe;AACrG,QAAMC,IAAkBC,EAAmBL,GAAYH,CAAI,KAAK,CAAE,GAM5DS,IAAQF,EAAgB,SAASJ,EAAW,SAAS;AAK3D,MAAI,EAAE,SAAAO,IAAU,EAAC,IAAKP;AACtB,EAAAO,IAAUA,IAAUC,EAAsBF,CAAK;AAC/C,QAAMG,IAAU;AAAA,IACZ,WAAW,MAAM,QAAQV,CAAM,IAAIA,IAAS,CAAC,MAAMA,CAAM;AAAA,IACzD,MAAM;AAAA,IACN,UAAUD,EAAM,YAAa;AAAA,IAC7B,GAAGM;AAAA,IACH,OAAO,CAACG;AAAA,IACR,UAAU,CAACG,MAAM;AACb,MAAAZ,EAAM,IAAIY,CAAC,GACXN,EAAgB,YAAYA,EAAgB,SAASM,CAAC;AAAA,IACzD;AAAA,IACD,YAAY,MAAM;AACd,MAAAP,EAAY,GACZC,EAAgB,cAAcA,EAAgB,WAAY;AAAA,IAC7D;AAAA,IACD,MAAAP;AAAA,IACA,aAAaC;AAAA,IACb,SAASI,IAAY,SAAYD;AAAA,EACpC;AAKD,EAAKU,EAAoBP,CAAe,KACpC,OAAO,OAAOK,GAASG,EAAqBf,GAAMY,CAAO,CAAC,GAO9DA,EAAQ,aAAaA,EAAQ,WAAWD,EAAsBC,EAAQ,QAAQ,IAC9EA,EAAQ,gBAAgBA,EAAQ,cAAcD,EAAsBC,EAAQ,WAAW,IAInFA,EAAQ,SAAS,WACjBA,EAAQ,UAAU,CAAC,IAAIA,EAAQ;AAEnC,MAAII,IAAa;AAwBjB,OAvBIJ,EAAQ,SAAS,MAChBA,EAAQ,aAAa,KAAK,CAACA,EAAQ,iBACpCA,EAAQ,WAAW,GACfA,EAAQ,UAAU,MAClBI,IAAa,OAGjBC,EAAmB,qBACnBA,EAAmB,oBACnBD,IAAa,IACbJ,EAAQ,WAAW,GACnBA,EAAQ,QAAQ,IAMpBA,EAAQ,eAAe,CAACL,EAAgB,QAAQ,CAACA,EAAgB,MAM7DS,KAAc,CAACX,KAAaJ,EAAM,IAAG,MAAO,QAAW;AACvD,UAAMiB,IAAgBC,EAAiBP,EAAQ,WAAWL,CAAe;AACzE,QAAIW,MAAkB,QAAW;AAC7B,MAAAE,EAAM,OAAO,MAAM;AACf,QAAAR,EAAQ,SAASM,CAAa,GAC9BN,EAAQ,WAAY;AAAA,MACpC,CAAa;AACD;AAAA,IACZ;AAAA,EACA;AACI,SAAOL,EAAgB,SACjB,IAAIc,EAAYT,CAAO,IACvB,IAAIU,EAA0BV,CAAO;AAC/C;","x_google_ignoreList":[0]}