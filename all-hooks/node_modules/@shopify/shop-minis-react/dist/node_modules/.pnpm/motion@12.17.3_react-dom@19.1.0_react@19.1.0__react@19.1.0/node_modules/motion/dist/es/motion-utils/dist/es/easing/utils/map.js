import { invariant as t } from "../../errors.js";
import { noop as c } from "../../noop.js";
import { anticipate as u } from "../anticipate.js";
import { backOut as m, backInOut as s, backIn as p } from "../back.js";
import { circOut as f, circInOut as l, circIn as I } from "../circ.js";
import { cubicBezier as b } from "../cubic-bezier.js";
import { easeOut as g, easeInOut as O, easeIn as y } from "../ease.js";
import { isBezierDefinition as k } from "./is-bezier-definition.js";
const e = {
  linear: c,
  easeIn: y,
  easeInOut: O,
  easeOut: g,
  circIn: I,
  circInOut: l,
  circOut: f,
  backIn: p,
  backInOut: s,
  backOut: m,
  anticipate: u
}, v = (r) => typeof r == "string", L = (r) => {
  if (k(r)) {
    t(r.length === 4, "Cubic bezier arrays must contain four numerical values.");
    const [o, n, a, i] = r;
    return b(o, n, a, i);
  } else if (v(r))
    return t(e[r] !== void 0, `Invalid easing type '${r}'`), e[r];
  return r;
};
export {
  L as easingDefinitionToFunction
};
//# sourceMappingURL=map.js.map
