{"version":3,"file":"useMergeRef.js","sources":["../../../../../../../../node_modules/.pnpm/use-callback-ref@1.3.3_@types+react@19.1.6_react@19.1.0/node_modules/use-callback-ref/dist/es2015/useMergeRef.js"],"sourcesContent":["import * as React from 'react';\nimport { assignRef } from './assignRef';\nimport { useCallbackRef } from './useRef';\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\nvar currentValues = new WeakMap();\n/**\n * Merges two or more refs together providing a single interface to set their value\n * @param {RefObject|Ref} refs\n * @returns {MutableRefObject} - a new ref, which translates all changes to {refs}\n *\n * @see {@link mergeRefs} a version without buit-in memoization\n * @see https://github.com/theKashey/use-callback-ref#usemergerefs\n * @example\n * const Component = React.forwardRef((props, ref) => {\n *   const ownRef = useRef();\n *   const domRef = useMergeRefs([ref, ownRef]); // ðŸ‘ˆ merge together\n *   return <div ref={domRef}>...</div>\n * }\n */\nexport function useMergeRefs(refs, defaultValue) {\n    var callbackRef = useCallbackRef(defaultValue || null, function (newValue) {\n        return refs.forEach(function (ref) { return assignRef(ref, newValue); });\n    });\n    // handle refs changes - added or removed\n    useIsomorphicLayoutEffect(function () {\n        var oldValue = currentValues.get(callbackRef);\n        if (oldValue) {\n            var prevRefs_1 = new Set(oldValue);\n            var nextRefs_1 = new Set(refs);\n            var current_1 = callbackRef.current;\n            prevRefs_1.forEach(function (ref) {\n                if (!nextRefs_1.has(ref)) {\n                    assignRef(ref, null);\n                }\n            });\n            nextRefs_1.forEach(function (ref) {\n                if (!prevRefs_1.has(ref)) {\n                    assignRef(ref, current_1);\n                }\n            });\n        }\n        currentValues.set(callbackRef, refs);\n    }, [refs]);\n    return callbackRef;\n}\n"],"names":["useIsomorphicLayoutEffect","React","currentValues","useMergeRefs","refs","defaultValue","callbackRef","useCallbackRef","newValue","ref","assignRef","oldValue","prevRefs_1","nextRefs_1","current_1"],"mappings":";;;AAGA,IAAIA,IAA4B,OAAO,SAAW,MAAcC,EAAM,kBAAkBA,EAAM,WAC1FC,IAAgB,oBAAI,QAAS;AAe1B,SAASC,EAAaC,GAAMC,GAAc;AAC7C,MAAIC,IAAcC,EAA+B,MAAM,SAAUC,GAAU;AACvE,WAAOJ,EAAK,QAAQ,SAAUK,GAAK;AAAE,aAAOC,EAAUD,GAAKD,CAAQ;AAAA,KAAI;AAAA,EAC/E,CAAK;AAED,SAAAR,EAA0B,WAAY;AAClC,QAAIW,IAAWT,EAAc,IAAII,CAAW;AAC5C,QAAIK,GAAU;AACV,UAAIC,IAAa,IAAI,IAAID,CAAQ,GAC7BE,IAAa,IAAI,IAAIT,CAAI,GACzBU,IAAYR,EAAY;AAC5B,MAAAM,EAAW,QAAQ,SAAUH,GAAK;AAC9B,QAAKI,EAAW,IAAIJ,CAAG,KACnBC,EAAUD,GAAK,IAAI;AAAA,MAEvC,CAAa,GACDI,EAAW,QAAQ,SAAUJ,GAAK;AAC9B,QAAKG,EAAW,IAAIH,CAAG,KACnBC,EAAUD,GAAKK,CAAS;AAAA,MAE5C,CAAa;AAAA,IACb;AACQ,IAAAZ,EAAc,IAAII,GAAaF,CAAI;AAAA,EAC3C,GAAO,CAACA,CAAI,CAAC,GACFE;AACX;","x_google_ignoreList":[0]}