import * as l from "react";
var v = (t, i, m, o, n, r, d, u) => {
  let s = document.documentElement, h = ["light", "dark"];
  function a(e) {
    (Array.isArray(t) ? t : [t]).forEach((c) => {
      let p = c === "class", S = p && r ? n.map((f) => r[f] || f) : n;
      p ? (s.classList.remove(...S), s.classList.add(r && r[e] ? r[e] : e)) : s.setAttribute(c, e);
    }), y(e);
  }
  function y(e) {
    u && h.includes(e) && (s.style.colorScheme = e);
  }
  function g() {
    return window.matchMedia("(prefers-color-scheme: dark)").matches ? "dark" : "light";
  }
  if (o) a(o);
  else try {
    let e = localStorage.getItem(i) || m, c = d && e === "system" ? g() : e;
    a(c);
  } catch {
  }
}, w = l.createContext(void 0), T = { setTheme: (t) => {
}, themes: [] }, b = () => {
  var t;
  return (t = l.useContext(w)) != null ? t : T;
};
l.memo(({ forcedTheme: t, storageKey: i, attribute: m, enableSystem: o, enableColorScheme: n, defaultTheme: r, value: d, themes: u, nonce: s, scriptProps: h }) => {
  let a = JSON.stringify([m, i, r, t, u, d, o, n]).slice(1, -1);
  return l.createElement("script", { ...h, suppressHydrationWarning: !0, nonce: typeof window > "u" ? s : "", dangerouslySetInnerHTML: { __html: `(${v.toString()})(${a})` } });
});
export {
  b as useTheme
};
//# sourceMappingURL=index.js.map
