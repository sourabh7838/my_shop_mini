{"version":3,"file":"component.js","sources":["../../../../../../../../node_modules/.pnpm/react-remove-scroll-bar@2.3.8_@types+react@19.1.6_react@19.1.0/node_modules/react-remove-scroll-bar/dist/es2015/component.js"],"sourcesContent":["import * as React from 'react';\nimport { styleSingleton } from 'react-style-singleton';\nimport { fullWidthClassName, zeroRightClassName, noScrollbarsClassName, removedBarSizeVariable } from './constants';\nimport { getGapWidth } from './utils';\nvar Style = styleSingleton();\nexport var lockAttribute = 'data-scroll-locked';\n// important tip - once we measure scrollBar width and remove them\n// we could not repeat this operation\n// thus we are using style-singleton - only the first \"yet correct\" style will be applied.\nvar getStyles = function (_a, allowRelative, gapMode, important) {\n    var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;\n    if (gapMode === void 0) { gapMode = 'margin'; }\n    return \"\\n  .\".concat(noScrollbarsClassName, \" {\\n   overflow: hidden \").concat(important, \";\\n   padding-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  body[\").concat(lockAttribute, \"] {\\n    overflow: hidden \").concat(important, \";\\n    overscroll-behavior: contain;\\n    \").concat([\n        allowRelative && \"position: relative \".concat(important, \";\"),\n        gapMode === 'margin' &&\n            \"\\n    padding-left: \".concat(left, \"px;\\n    padding-top: \").concat(top, \"px;\\n    padding-right: \").concat(right, \"px;\\n    margin-left:0;\\n    margin-top:0;\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n    \"),\n        gapMode === 'padding' && \"padding-right: \".concat(gap, \"px \").concat(important, \";\"),\n    ]\n        .filter(Boolean)\n        .join(''), \"\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" {\\n    right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" {\\n    margin-right: \").concat(gap, \"px \").concat(important, \";\\n  }\\n  \\n  .\").concat(zeroRightClassName, \" .\").concat(zeroRightClassName, \" {\\n    right: 0 \").concat(important, \";\\n  }\\n  \\n  .\").concat(fullWidthClassName, \" .\").concat(fullWidthClassName, \" {\\n    margin-right: 0 \").concat(important, \";\\n  }\\n  \\n  body[\").concat(lockAttribute, \"] {\\n    \").concat(removedBarSizeVariable, \": \").concat(gap, \"px;\\n  }\\n\");\n};\nvar getCurrentUseCounter = function () {\n    var counter = parseInt(document.body.getAttribute(lockAttribute) || '0', 10);\n    return isFinite(counter) ? counter : 0;\n};\nexport var useLockAttribute = function () {\n    React.useEffect(function () {\n        document.body.setAttribute(lockAttribute, (getCurrentUseCounter() + 1).toString());\n        return function () {\n            var newCounter = getCurrentUseCounter() - 1;\n            if (newCounter <= 0) {\n                document.body.removeAttribute(lockAttribute);\n            }\n            else {\n                document.body.setAttribute(lockAttribute, newCounter.toString());\n            }\n        };\n    }, []);\n};\n/**\n * Removes page scrollbar and blocks page scroll when mounted\n */\nexport var RemoveScrollBar = function (_a) {\n    var noRelative = _a.noRelative, noImportant = _a.noImportant, _b = _a.gapMode, gapMode = _b === void 0 ? 'margin' : _b;\n    useLockAttribute();\n    /*\n     gap will be measured on every component mount\n     however it will be used only by the \"first\" invocation\n     due to singleton nature of <Style\n     */\n    var gap = React.useMemo(function () { return getGapWidth(gapMode); }, [gapMode]);\n    return React.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, !noImportant ? '!important' : '') });\n};\n"],"names":["Style","styleSingleton","lockAttribute","getStyles","_a","allowRelative","gapMode","important","left","top","right","gap","noScrollbarsClassName","zeroRightClassName","fullWidthClassName","removedBarSizeVariable","getCurrentUseCounter","counter","useLockAttribute","React","newCounter","RemoveScrollBar","noRelative","noImportant","_b","getGapWidth"],"mappings":";;;;AAIA,IAAIA,IAAQC,EAAgB,GACjBC,IAAgB,sBAIvBC,IAAY,SAAUC,GAAIC,GAAeC,GAASC,GAAW;AAC7D,MAAIC,IAAOJ,EAAG,MAAMK,IAAML,EAAG,KAAKM,IAAQN,EAAG,OAAOO,IAAMP,EAAG;AAC7D,SAAIE,MAAY,WAAUA,IAAU,WAC7B;AAAA,KAAQ,OAAOM,GAAuB;AAAA,qBAA0B,EAAE,OAAOL,GAAW;AAAA,mBAAuB,EAAE,OAAOI,GAAK,KAAK,EAAE,OAAOJ,GAAW;AAAA;AAAA,QAAiB,EAAE,OAAOL,GAAe;AAAA,sBAA4B,EAAE,OAAOK,GAAW;AAAA;AAAA,KAA4C,EAAE,OAAO;AAAA,IACnSF,KAAiB,sBAAsB,OAAOE,GAAW,GAAG;AAAA,IAC5DD,MAAY,YACR;AAAA,oBAAuB,OAAOE,GAAM;AAAA,kBAAwB,EAAE,OAAOC,GAAK;AAAA,oBAA0B,EAAE,OAAOC,GAAO;AAAA;AAAA;AAAA,mBAAgE,EAAE,OAAOC,GAAK,KAAK,EAAE,OAAOJ,GAAW;AAAA,KAAS;AAAA,IACxOD,MAAY,aAAa,kBAAkB,OAAOK,GAAK,KAAK,EAAE,OAAOJ,GAAW,GAAG;AAAA,EAC3F,EACS,OAAO,OAAO,EACd,KAAK,EAAE,GAAG;AAAA;AAAA;AAAA,IAAgB,EAAE,OAAOM,GAAoB;AAAA,YAAiB,EAAE,OAAOF,GAAK,KAAK,EAAE,OAAOJ,GAAW;AAAA;AAAA;AAAA,IAAiB,EAAE,OAAOO,GAAoB;AAAA,mBAAwB,EAAE,OAAOH,GAAK,KAAK,EAAE,OAAOJ,GAAW;AAAA;AAAA;AAAA,IAAiB,EAAE,OAAOM,GAAoB,IAAI,EAAE,OAAOA,GAAoB;AAAA,cAAmB,EAAE,OAAON,GAAW;AAAA;AAAA;AAAA,IAAiB,EAAE,OAAOO,GAAoB,IAAI,EAAE,OAAOA,GAAoB;AAAA,qBAA0B,EAAE,OAAOP,GAAW;AAAA;AAAA;AAAA,QAAqB,EAAE,OAAOL,GAAe;AAAA,KAAW,EAAE,OAAOa,GAAwB,IAAI,EAAE,OAAOJ,GAAK;AAAA;AAAA,CAAY;AAC/kB,GACIK,IAAuB,WAAY;AACnC,MAAIC,IAAU,SAAS,SAAS,KAAK,aAAaf,CAAa,KAAK,KAAK,EAAE;AAC3E,SAAO,SAASe,CAAO,IAAIA,IAAU;AACzC,GACWC,IAAmB,WAAY;AACtC,EAAAC,EAAM,UAAU,WAAY;AACxB,oBAAS,KAAK,aAAajB,IAAgBc,MAAyB,GAAG,UAAU,GAC1E,WAAY;AACf,UAAII,IAAaJ,EAAoB,IAAK;AAC1C,MAAII,KAAc,IACd,SAAS,KAAK,gBAAgBlB,CAAa,IAG3C,SAAS,KAAK,aAAaA,GAAekB,EAAW,SAAQ,CAAE;AAAA,IAEtE;AAAA,EACJ,GAAE,EAAE;AACT,GAIWC,IAAkB,SAAUjB,GAAI;AACvC,MAAIkB,IAAalB,EAAG,YAAYmB,IAAcnB,EAAG,aAAaoB,IAAKpB,EAAG,SAASE,IAAUkB,MAAO,SAAS,WAAWA;AACpH,EAAAN,EAAkB;AAMlB,MAAIP,IAAMQ,EAAM,QAAQ,WAAY;AAAE,WAAOM,EAAYnB,CAAO;AAAA,EAAE,GAAI,CAACA,CAAO,CAAC;AAC/E,SAAOa,EAAM,cAAcnB,GAAO,EAAE,QAAQG,EAAUQ,GAAK,CAACW,GAAYhB,GAAUiB,IAA6B,KAAf,YAAiB,EAAC,CAAE;AACxH;","x_google_ignoreList":[0]}