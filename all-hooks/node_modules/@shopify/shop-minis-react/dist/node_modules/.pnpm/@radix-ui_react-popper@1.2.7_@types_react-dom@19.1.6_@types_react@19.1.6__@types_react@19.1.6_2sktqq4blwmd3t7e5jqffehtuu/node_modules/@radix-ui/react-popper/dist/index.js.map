{"version":3,"file":"index.js","sources":["../../../../../../../../node_modules/.pnpm/@radix-ui+react-popper@1.2.7_@types+react-dom@19.1.6_@types+react@19.1.6__@types+react@19.1.6_2sktqq4blwmd3t7e5jqffehtuu/node_modules/@radix-ui/react-popper/dist/index.mjs"],"sourcesContent":["\"use client\";\n\n// src/popper.tsx\nimport * as React from \"react\";\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size\n} from \"@floating-ui/react-dom\";\nimport * as ArrowPrimitive from \"@radix-ui/react-arrow\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useSize } from \"@radix-ui/react-use-size\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SIDE_OPTIONS = [\"top\", \"right\", \"bottom\", \"left\"];\nvar ALIGN_OPTIONS = [\"start\", \"center\", \"end\"];\nvar POPPER_NAME = \"Popper\";\nvar [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\nvar [PopperProvider, usePopperContext] = createPopperContext(POPPER_NAME);\nvar Popper = (props) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState(null);\n  return /* @__PURE__ */ jsx(PopperProvider, { scope: __scopePopper, anchor, onAnchorChange: setAnchor, children });\n};\nPopper.displayName = POPPER_NAME;\nvar ANCHOR_NAME = \"PopperAnchor\";\nvar PopperAnchor = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    React.useEffect(() => {\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n    return virtualRef ? null : /* @__PURE__ */ jsx(Primitive.div, { ...anchorProps, ref: composedRefs });\n  }\n);\nPopperAnchor.displayName = ANCHOR_NAME;\nvar CONTENT_NAME = \"PopperContent\";\nvar [PopperContentProvider, useContentContext] = createPopperContext(CONTENT_NAME);\nvar PopperContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = \"bottom\",\n      sideOffset = 0,\n      align = \"center\",\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = \"partial\",\n      hideWhenDetached = false,\n      updatePositionStrategy = \"optimized\",\n      onPlaced,\n      ...contentProps\n    } = props;\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n    const [content, setContent] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [arrow, setArrow] = React.useState(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n    const desiredPlacement = side + (align !== \"center\" ? \"-\" + align : \"\");\n    const collisionPadding = typeof collisionPaddingProp === \"number\" ? collisionPaddingProp : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries\n    };\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: \"fixed\",\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === \"always\"\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions && shift({\n          mainAxis: true,\n          crossAxis: false,\n          limiter: sticky === \"partial\" ? limitShift() : void 0,\n          ...detectOverflowOptions\n        }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty(\"--radix-popper-available-width\", `${availableWidth}px`);\n            contentStyle.setProperty(\"--radix-popper-available-height\", `${availableHeight}px`);\n            contentStyle.setProperty(\"--radix-popper-anchor-width\", `${anchorWidth}px`);\n            contentStyle.setProperty(\"--radix-popper-anchor-height\", `${anchorHeight}px`);\n          }\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: \"referenceHidden\", ...detectOverflowOptions })\n      ]\n    });\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const [contentZIndex, setContentZIndex] = React.useState();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n    return /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        ref: refs.setFloating,\n        \"data-radix-popper-content-wrapper\": \"\",\n        style: {\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : \"translate(0, -200%)\",\n          // keep off the page when measuring\n          minWidth: \"max-content\",\n          zIndex: contentZIndex,\n          [\"--radix-popper-transform-origin\"]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y\n          ].join(\" \"),\n          // hide the content if using the hide middleware and should be hidden\n          // set visibility to hidden and disable pointer events so the UI behaves\n          // as if the PopperContent isn't there at all\n          ...middlewareData.hide?.referenceHidden && {\n            visibility: \"hidden\",\n            pointerEvents: \"none\"\n          }\n        },\n        dir: props.dir,\n        children: /* @__PURE__ */ jsx(\n          PopperContentProvider,\n          {\n            scope: __scopePopper,\n            placedSide,\n            onArrowChange: setArrow,\n            arrowX,\n            arrowY,\n            shouldHideArrow: cannotCenterArrow,\n            children: /* @__PURE__ */ jsx(\n              Primitive.div,\n              {\n                \"data-side\": placedSide,\n                \"data-align\": placedAlign,\n                ...contentProps,\n                ref: composedRefs,\n                style: {\n                  ...contentProps.style,\n                  // if the PopperContent hasn't been placed yet (not all measurements done)\n                  // we prevent animations so that users's animation don't kick in too early referring wrong sides\n                  animation: !isPositioned ? \"none\" : void 0\n                }\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nPopperContent.displayName = CONTENT_NAME;\nvar ARROW_NAME = \"PopperArrow\";\nvar OPPOSITE_SIDE = {\n  top: \"bottom\",\n  right: \"left\",\n  bottom: \"top\",\n  left: \"right\"\n};\nvar PopperArrow = React.forwardRef(function PopperArrow2(props, forwardedRef) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    /* @__PURE__ */ jsx(\n      \"span\",\n      {\n        ref: contentContext.onArrowChange,\n        style: {\n          position: \"absolute\",\n          left: contentContext.arrowX,\n          top: contentContext.arrowY,\n          [baseSide]: 0,\n          transformOrigin: {\n            top: \"\",\n            right: \"0 0\",\n            bottom: \"center 0\",\n            left: \"100% 0\"\n          }[contentContext.placedSide],\n          transform: {\n            top: \"translateY(100%)\",\n            right: \"translateY(50%) rotate(90deg) translateX(-50%)\",\n            bottom: `rotate(180deg)`,\n            left: \"translateY(50%) rotate(-90deg) translateX(50%)\"\n          }[contentContext.placedSide],\n          visibility: contentContext.shouldHideArrow ? \"hidden\" : void 0\n        },\n        children: /* @__PURE__ */ jsx(\n          ArrowPrimitive.Root,\n          {\n            ...arrowProps,\n            ref: forwardedRef,\n            style: {\n              ...arrowProps.style,\n              // ensures the element can be measured correctly (mostly for if SVG)\n              display: \"block\"\n            }\n          }\n        )\n      }\n    )\n  );\n});\nPopperArrow.displayName = ARROW_NAME;\nfunction isNotNull(value) {\n  return value !== null;\n}\nvar transformOrigin = (options) => ({\n  name: \"transformOrigin\",\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: \"0%\", center: \"50%\", end: \"100%\" }[placedAlign];\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n    let x = \"\";\n    let y = \"\";\n    if (placedSide === \"bottom\") {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === \"top\") {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === \"right\") {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === \"left\") {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  }\n});\nfunction getSideAndAlignFromPlacement(placement) {\n  const [side, align = \"center\"] = placement.split(\"-\");\n  return [side, align];\n}\nvar Root2 = Popper;\nvar Anchor = PopperAnchor;\nvar Content = PopperContent;\nvar Arrow = PopperArrow;\nexport {\n  ALIGN_OPTIONS,\n  Anchor,\n  Arrow,\n  Content,\n  Popper,\n  PopperAnchor,\n  PopperArrow,\n  PopperContent,\n  Root2 as Root,\n  SIDE_OPTIONS,\n  createPopperScope\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["POPPER_NAME","createPopperContext","createPopperScope","createContextScope","PopperProvider","usePopperContext","Popper","props","__scopePopper","children","anchor","setAnchor","React","jsx","ANCHOR_NAME","PopperAnchor","forwardedRef","virtualRef","anchorProps","context","ref","composedRefs","useComposedRefs","Primitive","CONTENT_NAME","PopperContentProvider","useContentContext","PopperContent","side","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPaddingProp","sticky","hideWhenDetached","updatePositionStrategy","onPlaced","contentProps","content","setContent","node","arrow","setArrow","arrowSize","useSize","arrowWidth","arrowHeight","desiredPlacement","collisionPadding","boundary","hasExplicitBoundaries","detectOverflowOptions","isNotNull","refs","floatingStyles","placement","isPositioned","middlewareData","useFloating","args","autoUpdate","offset","shift","limitShift","flip","size","elements","rects","availableWidth","availableHeight","anchorWidth","anchorHeight","contentStyle","floatingUIarrow","transformOrigin","hide","placedSide","placedAlign","getSideAndAlignFromPlacement","handlePlaced","useCallbackRef","useLayoutEffect","arrowX","arrowY","cannotCenterArrow","contentZIndex","setContentZIndex","ARROW_NAME","OPPOSITE_SIDE","PopperArrow","arrowProps","contentContext","baseSide","ArrowPrimitive.Root","value","options","data","isArrowHidden","noArrowAlign","arrowXCenter","arrowYCenter","x","y","Root2","Anchor","Content","Arrow"],"mappings":"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","x_google_ignoreList":[0]}