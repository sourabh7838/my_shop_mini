{"version":3,"file":"useShopActionsPaginatedDataFetching.js","sources":["../../src/internal/useShopActionsPaginatedDataFetching.ts"],"sourcesContent":["import {useCallback, useEffect, useMemo, useState} from 'react'\n\nimport {\n  DataHookFetchPolicy,\n  PaginatedDataHookReturnsBase,\n  PaginationInfo,\n  ShopActionResult,\n} from '../types'\nimport {formatError, MiniError} from '../utils/errors'\n\nexport interface ShopActionsDataFetchingResult<S>\n  extends PaginatedDataHookReturnsBase {\n  data: S | null\n}\n\nexport const useShopActionsPaginatedDataFetching = <\n  S = unknown,\n  P extends {after?: string; fetchPolicy?: DataHookFetchPolicy} = {\n    after?: undefined\n    fetchPolicy?: DataHookFetchPolicy\n  },\n>(\n  action: (\n    params: P\n  ) => Promise<ShopActionResult<{data: S; pageInfo: PaginationInfo}>>,\n  params: P,\n  options: {\n    skip?: boolean\n    hook?: string\n    validator?: (data: S) => void\n  }\n): ShopActionsDataFetchingResult<S> => {\n  const [state, setState] = useState<{\n    data: S | null\n    pageInfo: PaginationInfo\n    loading: boolean\n    error: Error | null\n  }>({\n    data: null,\n    pageInfo: {hasNextPage: false, endCursor: null},\n    loading: false,\n    error: null,\n  })\n\n  const skip = options?.skip === true\n  const {validator, hook} = options\n  const runValidator = useCallback(\n    (dataToValidate: S): Error | null => {\n      try {\n        validator?.(dataToValidate)\n        return null\n      } catch (err) {\n        if (err instanceof Error) return err\n\n        return new MiniError({\n          hook,\n          message: 'Validation failed',\n        })\n      }\n    },\n    [validator, hook]\n  )\n\n  // Params object is recreated on every render, so we need to memoize it.\n  // We don't know what's inside the params object, but we can stringify it.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const stableParams = useMemo(() => params, [JSON.stringify(params)])\n\n  // There's a lot of complexity here because each type of fetch has different side effects if we are trying to\n  // stay close to how Apollo client works. eg:\n  // - Initial fetch: set loading, set error, set data, reset on error (don't throw)\n  // - change params fetch: set loading, set error, set data, reset on error (don't throw)\n  // - refetch fetch: don't set loading, set error, update data, leave data as is was on error (also throw)\n  // - fetchMore fetch: don't set loading, don't set error, update data, leave data as is was on error (also throw)\n  const fetch = useCallback(\n    async (\n      extraParams?: Partial<P>,\n      {\n        setLoading = true,\n        setError = true,\n        resetOnError = true,\n        throwOnError = true,\n        appendData = false,\n      }: {\n        setLoading?: boolean\n        setError?: boolean\n        resetOnError?: boolean\n        throwOnError?: boolean\n        appendData?: boolean\n      } = {}\n    ) => {\n      let queryError: Error | null = null\n      let validationError: Error | null = null\n\n      setState(curState => ({\n        ...curState,\n        loading: setLoading ? true : curState.loading,\n      }))\n\n      try {\n        const result = await action({...stableParams, ...extraParams})\n\n        if (result.ok) {\n          validationError = runValidator(result.data.data)\n\n          setState(curState => {\n            let newData = result.data.data\n\n            if (\n              appendData &&\n              curState.data &&\n              Array.isArray(curState.data) &&\n              Array.isArray(result.data.data)\n            ) {\n              newData = [...curState.data, ...result.data.data] as S\n            }\n\n            return {\n              ...curState,\n              data: newData,\n              pageInfo: result.data.pageInfo,\n              loading: false,\n              error: validationError ?? null,\n            }\n          })\n        } else {\n          throw result.error\n        }\n      } catch (err) {\n        console.log('caught 1', err)\n        queryError = formatError({hook}, err)\n      }\n\n      const error = validationError || queryError\n\n      if (error && (setError || resetOnError)) {\n        setState(curState => ({\n          data: resetOnError ? null : curState.data,\n          pageInfo: resetOnError\n            ? {hasNextPage: false, endCursor: null}\n            : curState.pageInfo,\n          loading: false,\n          error,\n        }))\n      }\n\n      if (error && throwOnError) {\n        throw error\n      }\n    },\n    [action, stableParams, hook, runValidator]\n  )\n\n  const refetch = useCallback(async () => {\n    await fetch({fetchPolicy: 'network-only'} as Partial<P>, {\n      setLoading: false,\n      resetOnError: false,\n      throwOnError: true,\n    })\n  }, [fetch])\n\n  const fetchMore = useCallback(async () => {\n    if (!state.pageInfo.hasNextPage || !state.pageInfo.endCursor) return\n\n    await fetch({after: state.pageInfo.endCursor} as Partial<P>, {\n      setLoading: false,\n      setError: false,\n      resetOnError: false,\n      throwOnError: true,\n      appendData: true,\n    })\n  }, [state.pageInfo.hasNextPage, state.pageInfo.endCursor, fetch])\n\n  useEffect(() => {\n    if (skip) return\n\n    fetch(\n      {},\n      {\n        throwOnError: false,\n      }\n    )\n  }, [fetch, skip])\n\n  return {\n    data: state.data,\n    loading: state.loading,\n    error: state.error,\n    hasNextPage: state.pageInfo.hasNextPage,\n    refetch,\n    fetchMore,\n  }\n}\n"],"names":["useShopActionsPaginatedDataFetching","action","params","options","state","setState","useState","skip","validator","hook","runValidator","useCallback","dataToValidate","err","MiniError","stableParams","useMemo","fetch","extraParams","setLoading","setError","resetOnError","throwOnError","appendData","queryError","validationError","curState","result","newData","formatError","error","refetch","fetchMore","useEffect"],"mappings":"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"}