{"version":3,"file":"minisSDK.generated.d.js","sources":["../../src/types/minisSDK.generated.d.ts"],"sourcesContent":["/* eslint-disable @shopify/typescript/prefer-pascal-case-enums */\n// Auto-generated type definitions for MinisSDK\n// Generated on: 2025-06-18T21:41:30.210Z\n// Do not edit this file manually - run the generation script instead\n// Source: useShopActionsImplementationV3.ts + shopActionsV3Definitions.ts + shopActionsV3Types.ts\n// Generated using TypeScript compiler API for reliable AST parsing\n//\n// This file is self-contained and can be shipped independently\n\n// ============================================================================\n// Base Types (extracted using TypeScript AST parsing)\n// ============================================================================\n\nexport interface ApiKeys {\n  refreshToken: string\n  accessToken: string\n}\n\nexport interface ShopActionOk<T> {\n  ok: true\n  data: T\n}\n\nexport interface ShopActionError {\n  ok: false\n  error: Error & {code?: string}\n}\n\nexport type ShopActionResult<T = void> = ShopActionOk<T> | ShopActionError\n\nexport interface ShopActions {\n  getShopAppInformation: () => Promise<\n    ShopActionResult<GetShopAppInformationResponse>\n  >\n  productRecommendationImpression(\n    params: ProductRecommendationImpressionParams\n  ): Promise<ShopActionResult>\n  productRecommendationClick(\n    params: ProductRecommendationClickParams\n  ): Promise<ShopActionResult>\n  hideEntryPoint(): Promise<ShopActionResult>\n  closeMini(): Promise<ShopActionResult>\n\n  // account actions\n  followShop(params: FollowShopParams): Promise<ShopActionResult<boolean>>\n  unfollowShop(params: UnfollowShopParams): Promise<ShopActionResult<boolean>>\n  favorite(params: FavoriteParams): Promise<ShopActionResult>\n  unfavorite(params: UnfavoriteParams): Promise<ShopActionResult>\n  getAccountInformation: (\n    params: GetAccountInformationParams\n  ) => Promise<ShopActionResult<GetAccountInformationResponse>>\n\n  // user actions\n  getCurrentUser(\n    params?: GetCurrentUserParams\n  ): Promise<ShopActionResult<GetCurrentUserResponse>>\n\n  // product actions\n  createOrderAttribution(\n    params: CreateOrderAttributionParams\n  ): Promise<ShopActionResult>\n  addToCart(params: AddToCartParams): Promise<ShopActionResult>\n  buyProduct(params: BuyProductParams): Promise<ShopActionResult>\n  buyProducts(params: BuyProductsParams): Promise<ShopActionResult>\n\n  // error actions\n  showErrorScreen: (params: ShowErrorScreenParams) => Promise<ShopActionResult>\n  showErrorToast: (message: ShowErrorToastParams) => Promise<ShopActionResult>\n\n  // deeplink actions\n  getDeeplinkPaths(): Promise<ShopActionResult<GetDeeplinkPathsResponse>>\n  navigateToDeeplink(\n    params: NavigateToDeeplinkParams\n  ): Promise<ShopActionResult>\n\n  // navigation actions\n  navigateToShop(params: NavigateToShopParams): Promise<ShopActionResult>\n  navigateToProduct(params: NavigateToProductParams): Promise<ShopActionResult>\n  navigateToOrder(params: NavigateToOrderParams): Promise<ShopActionResult>\n  navigateToCheckout(\n    params: NavigateToCheckoutParams\n  ): Promise<ShopActionResult>\n\n  // image upload actions\n  createImageUploadLink(\n    params: CreateImageUploadLinkParams\n  ): Promise<ShopActionResult<CreateImageUploadLinkResponse>>\n  completeImageUpload(\n    params: CompleteImageUploadParams\n  ): Promise<ShopActionResult<CompleteImageUploadResponse>>\n\n  // async storage actions\n  getPersistedItem(\n    params: GetAsyncStorageItemParams\n  ): Promise<ShopActionResult<string | null>>\n  setPersistedItem(params: SetAsyncStorageItemParams): Promise<ShopActionResult>\n  removePersistedItem(\n    params: RemoveAsyncStorageItemParams\n  ): Promise<ShopActionResult>\n  getAllPersistedKeys(): Promise<ShopActionResult<string[]>>\n  clearPersistedItems(): Promise<ShopActionResult>\n\n  getInternalPersistedItem(\n    params: GetAsyncStorageItemParams\n  ): Promise<ShopActionResult<string | null>>\n  setInternalPersistedItem(\n    params: SetAsyncStorageItemParams\n  ): Promise<ShopActionResult>\n  removeInternalPersistedItem(\n    params: RemoveAsyncStorageItemParams\n  ): Promise<ShopActionResult>\n  getAllInternalPersistedKeys(): Promise<ShopActionResult<string[]>>\n  clearInternalPersistedItems(): Promise<ShopActionResult>\n\n  // secure storage actions\n  getSecret(): Promise<ShopActionResult<string | null>>\n  setSecret(params: SetSecretParams): Promise<ShopActionResult>\n  removeSecret(): Promise<ShopActionResult>\n\n  // event reporting actions\n  reportInteraction(params: ReportInteractionParams): Promise<ShopActionResult>\n  reportImpression(params: ReportImpressionParams): Promise<ShopActionResult>\n  reportContentImpression(\n    params: ReportContentImpressionParams\n  ): Promise<ShopActionResult>\n\n  getProductLists(\n    params?: GetProductListsParams\n  ): Promise<ShopActionResult<GetProductListsResponse>>\n\n  getProductList(\n    params?: GetProductListParams\n  ): Promise<ShopActionResult<GetProductListResponse>>\n\n  // product list actions\n  addProductList(\n    params: AddProductListParams\n  ): Promise<ShopActionResult<ProductList>>\n  removeProductList(params: RemoveProductListParams): Promise<ShopActionResult>\n  renameProductList: (\n    params: RenameProductListParams\n  ) => Promise<ShopActionResult<ProductList>>\n  addProductListItem(\n    params: AddProductListItemParams\n  ): Promise<ShopActionResult>\n  removeProductListItem(\n    params: RemoveProductListItemParams\n  ): Promise<ShopActionResult>\n\n  // recommendations actions\n  getRecommendedProducts(\n    params?: GetRecommendedProductsParams\n  ): Promise<ShopActionResult<GetRecommendedProductsResponse>>\n  getRecommendedShops(\n    params?: GetRecommendedShopsParams\n  ): Promise<ShopActionResult<GetRecommendedShopsResponse>>\n  searchProductsByShop(\n    params?: SearchProductsByShopParams\n  ): Promise<ShopActionResult<SearchProductsByShopResponse>>\n\n  // orders list actions\n  getOrders(\n    params?: GetOrdersParams\n  ): Promise<ShopActionResult<GetOrdersResponse>>\n\n  getBuyerAttributes(): Promise<ShopActionResult<GetBuyerAttributesResponse>>\n\n  // content actions\n  showFeedbackSheet(params: ShowFeedbackSheetParams): Promise<ShopActionResult>\n\n  getPopularProducts(\n    params?: GetPopularProductsParams\n  ): Promise<ShopActionResult<GetPopularProductsResponse>>\n\n  share(params: ShareParams): Promise<ShopActionResult>\n\n  getCuratedProducts(\n    params: GetCuratedProductsParams\n  ): Promise<ShopActionResult<GetCuratedProductsResponse>>\n\n  getSavedProducts(\n    params?: GetSavedProductsParams\n  ): Promise<ShopActionResult<GetSavedProductsResponse>>\n\n  getRecentProducts(\n    params?: GetRecentProductsParams\n  ): Promise<ShopActionResult<GetRecentProductsResponse>>\n\n  getProductSearch(\n    params: GetProductSearchParams\n  ): Promise<ShopActionResult<GetProductSearchResponse>>\n\n  getProducts(\n    params: GetProductsParams\n  ): Promise<ShopActionResult<GetProductsResponse>>\n\n  getProduct(\n    params: GetProductParams\n  ): Promise<ShopActionResult<GetProductResponse>>\n\n  getProductVariants(\n    params: GetProductVariantsParams\n  ): Promise<ShopActionResult<GetProductVariantsResponse>>\n\n  getProductMedia(\n    params: GetProductMediaParams\n  ): Promise<ShopActionResult<GetProductMediaResponse>>\n\n  getShop(params: GetShopParams): Promise<ShopActionResult<GetShopResponse>>\n\n  getRecentShops(\n    params?: GetRecentShopsParams\n  ): Promise<ShopActionResult<GetRecentShopsResponse>>\n\n  getFollowedShops(\n    params?: GetFollowedShopsParams\n  ): Promise<ShopActionResult<GetFollowedShopsResponse>>\n}\n\nexport interface AuthShopActions {\n  refreshAccessToken(\n    params: RefreshAccessTokenParams\n  ): Promise<ShopActionResult<ApiKeys>>\n  signOut(): Promise<ShopActionResult>\n}\n\nexport type AllShopActions = ShopActions & AuthShopActions\n\nexport type ShopActionParams<T extends keyof AllShopActions> = Parameters<\n  AllShopActions[T]\n>[0]\n\nexport interface FavoriteParams {\n  shopId: string\n  productId: string\n  productVariantId: string\n}\n\nexport interface UnfavoriteParams {\n  shopId: string\n  productId: string\n  productVariantId: string\n}\n\nexport interface LineItemAttribution {\n  sourceName: string\n  sourceIdentifier: string\n}\n\nexport interface CreateOrderAttributionParams {\n  orderId: string\n  productVariantId: string\n  attribution?: LineItemAttribution\n}\n\nexport interface AddToCartParams extends BuyProductLineItem {\n  /**\n   * The discount codes to apply to the cart.\n   */\n  discountCodes?: string[]\n  /**\n   * Attribution data for the line item.\n   * @deprecated\n   */\n  attribution?: LineItemAttribution\n}\n\nexport interface BuyProductLineItem {\n  /**\n   * The GID of the product. E.g. `gid://shopify/Product/123`.\n   */\n  productId: string\n  /**\n   * The GID of the product variant. E.g. `gid://shopify/ProductVariant/456`.\n   */\n  productVariantId: string\n  /**\n   * The quantity of the product to add to the cart.\n   */\n  quantity?: number\n}\n\nexport interface BuyProductsParams {\n  items: [BuyProductLineItem, ...BuyProductLineItem[]] // at least one item\n  attribution?: LineItemAttribution\n  discountCode?: string\n}\n\nexport interface BuyProductParams extends BuyProductLineItem {\n  /**\n   * Attribution data for the line item.\n   * @deprecated\n   */\n  attribution?: LineItemAttribution\n  /**\n   * The discount code to apply to the product.\n   */\n  discountCode?: string\n}\n\nexport interface UpdateLineItemAttributesParams {\n  lineItemAttributes: {key: string; value: string}[]\n  attribution?: LineItemAttribution\n}\n\nexport interface NavigateToShopParams {\n  shopId: string\n}\n\nexport interface NavigateToOrderParams {\n  /**\n   * The GID of the order. E.g. `gid://shopify/Order/123`.\n   */\n  orderId: string\n}\n\nexport interface NavigateToCheckoutParams {\n  /**\n   * The GID of the shop. E.g. `gid://shopify/Shop/123`.\n   */\n  shopId: string\n}\n\nexport interface NavigateToProductParams {\n  /**\n   * The GID of the product. E.g. `gid://shopify/Product/123`.\n   */\n  productId: string\n  /**\n   * If present, the GID of the variant that should be initially selected\n   */\n  productVariantId?: string\n  /*\n   * Variants displayed in the product details screen will be limited to those\n   * whose ID is included in this list.\n   */\n  includedProductVariantGIDs?: string[]\n  /**\n   * @deprecated use includedProductVariantGIDs instead\n   */\n  includedProductVariantIds?: string[]\n  /**\n   * @deprecated do not use\n   */\n  attribution?: LineItemAttribution\n  /**\n   * The discount code to apply to the product.\n   */\n  discountCode?: string\n}\n\nexport interface RefreshAccessTokenParams {\n  refreshToken: string\n}\n\nexport interface ProductRecommendationImpressionParams {\n  // The product GID string\n  productId: string\n  // Optional section id, could be useful for tracking which UI sections get impressions\n  sectionId?: string\n}\n\nexport interface ProductRecommendationClickParams {\n  productId: string\n  sectionId?: string\n}\n\nexport interface ShowErrorScreenParams {\n  /**\n   * The message to display in the error screen.\n   */\n  message?: string\n  /**\n   * The title of the error screen.\n   */\n  title?: string\n}\n\nexport interface ShowErrorToastParams {\n  message?: string\n}\n\nexport interface GetAccountInformationParams {\n  /**\n   * To use user account information, a shopId must be given to track on\n   * which shop's behalf user information is being accessed\n   */\n  shopId: string\n  type: 'email' | 'name' | 'phone'\n}\n\nexport interface AccountInformationPhoneInfo {\n  phoneNumber: string\n  countryCode: string\n  prefix: string\n}\n\nexport interface GetAccountInformationResponse {\n  status: 'available' | 'not-available'\n  value?: string | AccountInformationPhoneInfo\n}\n\nexport interface GetShopAppInformationResponse {\n  appVersion: string\n  buildNumber: string\n  buildId: string\n}\n\nexport interface FollowShopParams {\n  shopId: string\n}\n\nexport interface UnfollowShopParams {\n  shopId: string\n}\n\nexport interface NavigateToDeeplinkParams {\n  deeplink: string\n}\n\nexport interface GetDeeplinkPathsResponse {\n  matchers: string[]\n}\n\nexport interface ProductRecommendationClickParams {\n  productId: string\n  productVariantId?: string\n  variantGIDs?: string[]\n  discountCode?: string\n  attribution?: LineItemAttribution\n  sectionId?: string\n}\n\nexport interface CreateImageUploadLinkParams {\n  input: {\n    mimeType: string\n    fileSize: number\n  }[]\n}\n\nexport interface UploadTarget {\n  url: string\n  resourceUrl: string\n  parameters: {name: string; value: string}[]\n}\n\nexport interface CreateImageUploadLinkResponse {\n  targets?: UploadTarget[]\n  error?: string\n}\n\nexport interface CompleteImageUploadParams {\n  resourceUrls: string[]\n}\n\nexport interface CompleteImageUploadResponse {\n  files?: {\n    id: string\n    fileStatus: 'FAILED' | 'PENDING' | 'PROCESSING' | 'READY'\n    image?: {\n      url: string\n    } | null\n  }[]\n  error?: string\n}\n\nexport interface PaginationInfo {\n  hasNextPage: boolean\n  endCursor: string | null\n}\n\nexport interface GetProductListsResponse {\n  data: ProductList[]\n  pageInfo: PaginationInfo\n}\n\nexport interface GetProductListResponse {\n  data: ProductList | null\n  pageInfo: PaginationInfo\n}\n\nexport interface GetRecommendedProductsResponse {\n  data: Product[]\n  pageInfo: PaginationInfo\n}\n\nexport interface GetRecommendedShopsResponse {\n  data: Shop[]\n  pageInfo: PaginationInfo\n}\n\nexport interface SearchProductsByShopResponse {\n  data: Product[]\n  pageInfo: PaginationInfo\n}\n\nexport interface GetBuyerAttributesResponse {\n  data: {\n    genderAffinity?: Gender\n    categoryAffinities: TaxonomyCategory[]\n  }\n}\n\nexport interface GetCurrentUserResponse {\n  data: UserProfile\n}\n\nexport interface GetOrdersResponse {\n  data: Order[]\n  pageInfo: PaginationInfo\n}\n\nexport interface SetSecretParams {\n  value: string\n}\n\nexport interface SetAsyncStorageItemParams {\n  key: string\n  value: string\n}\n\nexport interface GetAsyncStorageItemParams {\n  key: string\n}\n\nexport interface RemoveAsyncStorageItemParams {\n  key: string\n}\n\nexport interface ReportInteractionParams {\n  interactionType: string\n  interactionValue?: string\n  pageValue?: string\n}\n\nexport interface ReportImpressionParams {\n  subjectType?: string\n  subjectId?: string\n  pageValue?: string\n}\n\nexport interface ReportContentImpressionParams {\n  publicId: string\n  pageValue: string\n}\n\nexport interface GetProductListsParams {\n  /**\n   * The number of lists to fetch.\n   */\n  first?: number\n  /**\n   * The cursor to fetch the next page of lists.\n   */\n  after?: string\n  /**\n   * The number of items per list to fetch.\n   */\n  itemsFirst?: number\n  /**\n   * The fetch policy to use.\n   */\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetProductListParams {\n  /**\n   * The GID of the product list. E.g. `gid://shopapp/ProductList/123`.\n   */\n  id?: string\n  /**\n   * The public ID of the product list.\n   */\n  publicId?: string\n  /**\n   * The number of items to fetch.\n   */\n  first?: number\n  /**\n   * The cursor to fetch the next page of items.\n   */\n  after?: string\n  /**\n   * The fetch policy to use.\n   */\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface AddProductListParams {\n  /**\n   * The name of the product list.\n   */\n  name: string\n  /**\n   * A description of the product list.\n   */\n  description?: string\n}\n\nexport interface RemoveProductListParams {\n  /**\n   * The GID of the product list. E.g. `gid://shopapp/ProductList/123`.\n   */\n  id: string\n}\n\nexport interface RenameProductListParams {\n  /**\n   * The GID of the product list. E.g. `gid://shopapp/ProductList/123`.\n   */\n  id: string\n  /**\n   * The new name of the product list.\n   */\n  name: string\n}\n\nexport interface AddProductListItemParams {\n  /**\n   * The GID of the shop. E.g. `gid://shopify/Shop/42`.\n   */\n  shopId: string\n  /**\n   * The GID of the product variant. E.g. `gid://shopify/ProductVariant/101`.\n   */\n  productVariantId: string\n  /**\n   * The GID of the product. E.g. `gid://shopify/Product/123`.\n   */\n  productId: string\n  /**\n   * The GID of the product list. E.g. `gid://shopapp/ProductList/123`.\n   * This will soon be deprecated in favor of just `publicListId`.\n   */\n  listId: string\n  /**\n   * The public ID of the product list.\n   */\n  publicListId: string\n}\n\nexport interface RemoveProductListItemParams {\n  /**\n   * The GID of the shop. E.g. `gid://shopify/Shop/42`.\n   */\n  shopId: string\n  /**\n   * The GID of the product variant. E.g. `gid://shopify/ProductVariant/101`.\n   */\n  productVariantId: string\n  /**\n   * The GID of the product. E.g. `gid://shopify/Product/123`.\n   */\n  productId: string\n  /**\n   * The GID of the product list. E.g. `gid://shopapp/ProductList/123`.\n   * This will soon be deprecated in favor of just `publicListId`.\n   */\n  listId: string\n  /**\n   * The public ID of the product list.\n   */\n  publicListId: string\n}\n\nexport interface GetRecommendedProductsParams {\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetRecommendedShopsParams {\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface SearchProductsByShopParams {\n  shopId: string\n  query?: string\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetBuyerAttributesParams {\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetCurrentUserParams {\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetOrdersParams {\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface ShowFeedbackSheetParams {\n  publicId: string\n}\n\nexport interface GetPopularProductsParams {\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetPopularProductsResponse {\n  data: Product[]\n  pageInfo: PaginationInfo\n}\n\nexport interface PreviewProductInARParams {\n  id: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetCuratedProductsParams {\n  handle: string\n  requiredTags?: string[]\n  anyOfTags?: string[]\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetCuratedProductsResponse {\n  data: Product[]\n  pageInfo: PaginationInfo\n}\n\nexport interface GetProductMediaParams {\n  id: string\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetProductMediaResponse {\n  data: ProductMedia[]\n  pageInfo: PaginationInfo\n}\n\nexport interface GetShopParams {\n  id: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetShopResponse {\n  data: Shop\n}\n\nexport interface GetRecentShopsParams {\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetRecentShopsResponse {\n  data: Shop[]\n  pageInfo: PaginationInfo\n}\n\nexport interface GetFollowedShopsParams {\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetFollowedShopsResponse {\n  data: Shop[]\n  pageInfo: PaginationInfo\n}\n\nexport interface GetProductsParams {\n  ids: string[]\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetProductsResponse {\n  data: Product[]\n}\n\nexport interface GetProductParams {\n  id: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetProductResponse {\n  data: Product\n}\n\nexport interface ShareParams {\n  message?: string\n  title?: string\n  url?: string\n  urls?: string[]\n  type?: string\n  failOnCancel?: boolean\n}\n\nexport interface GetSavedProductsParams {\n  includeSensitive?: boolean\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetSavedProductsResponse {\n  data: Product[]\n  pageInfo: PaginationInfo\n}\n\nexport interface GetRecentProductsParams {\n  includeSensitive?: boolean\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetRecentProductsResponse {\n  data: Product[]\n  pageInfo: PaginationInfo\n}\n\nexport interface GetProductSearchParams {\n  query: string\n  filters?: ProductFilters\n  sortBy?: ProductSearchSortBy\n  includeSensitive?: boolean\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetProductSearchResponse {\n  data: Product[]\n  pageInfo: PaginationInfo\n}\n\nexport interface GetProductVariantsParams {\n  id: string\n  first?: number\n  after?: string\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface GetProductVariantsResponse {\n  data: ProductVariant[]\n  pageInfo: PaginationInfo\n}\n\nexport interface MinisParams {\n  /** The handle/identifier of the Mini application */\n  handle: string\n  /** The initial URL that was used to load the Mini (optional) */\n  initialUrl?: string\n}\n\nexport type FetchPolicy =\n  | 'cache-first'\n  | 'network-only'\n  | 'cache-only'\n  | 'no-cache'\n  | 'standby'\n\nexport type WatchQueryFetchPolicy = FetchPolicy | 'cache-and-network'\n\nexport enum CurrencyCode {\n  AED = 'AED',\n  AFN = 'AFN',\n  ALL = 'ALL',\n  AMD = 'AMD',\n  ANG = 'ANG',\n  AOA = 'AOA',\n  ARS = 'ARS',\n  AUD = 'AUD',\n  AWG = 'AWG',\n  AZN = 'AZN',\n  BAM = 'BAM',\n  BBD = 'BBD',\n  BDT = 'BDT',\n  BGN = 'BGN',\n  BHD = 'BHD',\n  BIF = 'BIF',\n  BMD = 'BMD',\n  BND = 'BND',\n  BOB = 'BOB',\n  BRL = 'BRL',\n  BSD = 'BSD',\n  BTN = 'BTN',\n  BWP = 'BWP',\n  BYN = 'BYN',\n  BYR = 'BYR',\n  BZD = 'BZD',\n  CAD = 'CAD',\n  CDF = 'CDF',\n  CHF = 'CHF',\n  CLP = 'CLP',\n  CNY = 'CNY',\n  COP = 'COP',\n  CRC = 'CRC',\n  CVE = 'CVE',\n  CZK = 'CZK',\n  DJF = 'DJF',\n  DKK = 'DKK',\n  DOP = 'DOP',\n  DZD = 'DZD',\n  EGP = 'EGP',\n  ERN = 'ERN',\n  ETB = 'ETB',\n  EUR = 'EUR',\n  FJD = 'FJD',\n  FKP = 'FKP',\n  GBP = 'GBP',\n  GEL = 'GEL',\n  GHS = 'GHS',\n  GIP = 'GIP',\n  GMD = 'GMD',\n  GNF = 'GNF',\n  GTQ = 'GTQ',\n  GYD = 'GYD',\n  HKD = 'HKD',\n  HNL = 'HNL',\n  HRK = 'HRK',\n  HTG = 'HTG',\n  HUF = 'HUF',\n  IDR = 'IDR',\n  ILS = 'ILS',\n  INR = 'INR',\n  IQD = 'IQD',\n  IRR = 'IRR',\n  ISK = 'ISK',\n  JEP = 'JEP',\n  JMD = 'JMD',\n  JOD = 'JOD',\n  JPY = 'JPY',\n  KES = 'KES',\n  KGS = 'KGS',\n  KHR = 'KHR',\n  KID = 'KID',\n  KMF = 'KMF',\n  KRW = 'KRW',\n  KWD = 'KWD',\n  KYD = 'KYD',\n  KZT = 'KZT',\n  LAK = 'LAK',\n  LBP = 'LBP',\n  LKR = 'LKR',\n  LRD = 'LRD',\n  LSL = 'LSL',\n  LTL = 'LTL',\n  LVL = 'LVL',\n  LYD = 'LYD',\n  MAD = 'MAD',\n  MDL = 'MDL',\n  MGA = 'MGA',\n  MKD = 'MKD',\n  MMK = 'MMK',\n  MNT = 'MNT',\n  MOP = 'MOP',\n  MRU = 'MRU',\n  MUR = 'MUR',\n  MVR = 'MVR',\n  MWK = 'MWK',\n  MXN = 'MXN',\n  MYR = 'MYR',\n  MZN = 'MZN',\n  NAD = 'NAD',\n  NGN = 'NGN',\n  NIO = 'NIO',\n  NOK = 'NOK',\n  NPR = 'NPR',\n  NZD = 'NZD',\n  OMR = 'OMR',\n  PAB = 'PAB',\n  PEN = 'PEN',\n  PGK = 'PGK',\n  PHP = 'PHP',\n  PKR = 'PKR',\n  PLN = 'PLN',\n  PYG = 'PYG',\n  QAR = 'QAR',\n  RON = 'RON',\n  RSD = 'RSD',\n  RUB = 'RUB',\n  RWF = 'RWF',\n  SAR = 'SAR',\n  SBD = 'SBD',\n  SCR = 'SCR',\n  SDG = 'SDG',\n  SEK = 'SEK',\n  SGD = 'SGD',\n  SHP = 'SHP',\n  SLL = 'SLL',\n  SOS = 'SOS',\n  SRD = 'SRD',\n  SSP = 'SSP',\n  STD = 'STD',\n  STN = 'STN',\n  SYP = 'SYP',\n  SZL = 'SZL',\n  THB = 'THB',\n  TJS = 'TJS',\n  TMT = 'TMT',\n  TND = 'TND',\n  TOP = 'TOP',\n  TRY = 'TRY',\n  TTD = 'TTD',\n  TWD = 'TWD',\n  TZS = 'TZS',\n  UAH = 'UAH',\n  UGX = 'UGX',\n  USD = 'USD',\n  UYU = 'UYU',\n  UZS = 'UZS',\n  VED = 'VED',\n  VEF = 'VEF',\n  VES = 'VES',\n  VND = 'VND',\n  VUV = 'VUV',\n  WST = 'WST',\n  XAF = 'XAF',\n  XCD = 'XCD',\n  XOF = 'XOF',\n  XPF = 'XPF',\n  XXX = 'XXX',\n  YER = 'YER',\n  ZAR = 'ZAR',\n  ZMW = 'ZMW',\n}\n\nexport type Decimal = string\n\nexport type MiniAppParams = any\n\nexport interface MiniAppConfig<\n  _DeprecatedParams extends MiniAppParams = undefined,\n> {\n  /**\n   * Root component of used inside the Minis Viewer\n   */\n  ViewerRoot: () => JSX.Element | null\n}\n\nexport interface MiniManifest {\n  trusted_domains?: string[]\n  permissions?: string[]\n  [key: string]: any\n}\n\nexport type Permission = 'CAMERA' | 'GALLERY' | 'MICROPHONE'\n\nexport interface Money {\n  amount: Decimal\n  currencyCode: CurrencyCode\n}\n\nexport interface ProductImage {\n  id?: string | null\n  altText?: string | null\n  url: string\n  sensitive?: boolean | null\n}\n\nexport interface ProductVariant {\n  id: string\n  isFavorited: boolean\n  image?: ProductImage | null\n  price: Money\n  compareAtPrice?: Money | null\n}\n\nexport interface ProductShop {\n  id: string\n  name: string\n}\n\nexport type ProductMedia =\n  | {\n      id: string\n      image: ProductImage | null\n      mediaContentType: 'IMAGE'\n      alt: string | null\n    }\n  | {\n      id: string\n      mediaContentType: 'MODEL_3D'\n      previewImage: ProductImage | null\n      sources: {\n        filesize: number\n        format: string\n        mimeType: string\n        url: string\n      }[]\n      alt: string | null\n    }\n  | {\n      id: string\n      mediaContentType: 'VIDEO'\n      previewImage: ProductImage | null\n      sources: {\n        format: string\n        mimeType: string\n        url: string\n        width: number\n        height: number\n      }[]\n      alt: string | null\n    }\n  | {\n      id: string\n      mediaContentType: 'EXTERNAL_VIDEO'\n      previewImage: ProductImage | null\n      embedUrl: string\n      alt: string | null\n    }\n\nexport interface Product {\n  id: string\n  title: string\n  reviewAnalytics: {\n    averageRating?: number | null\n    reviewCount?: number | null\n  }\n  shop: ProductShop\n  selectedVariant?: ProductVariant\n  defaultVariantId: string\n  isFavorited: boolean\n  variants?: ProductVariant[]\n  featuredImage?: ProductImage | null\n  price: Money\n  compareAtPrice?: Money | null\n}\n\nexport interface Shop {\n  id: string\n  name: string\n  isFollowing?: boolean | null\n  shareUrl?: string | null\n  primaryDomain: {\n    url: string\n  }\n  logoImage?: ProductImage | null\n  reviewAnalytics: {\n    averageRating?: number | null\n    reviewCount: number\n  }\n}\n\nexport interface QueryOptions {\n  fetchPolicy?: WatchQueryFetchPolicy\n  skip?: boolean\n}\n\nexport interface ProductList {\n  id: string\n  publicId: string | null\n  name: string | null\n  products: Product[]\n}\n\nexport interface Order {\n  id: string\n  name: string\n  lineItems: {\n    productTitle: string\n    variantTitle: string | null\n    quantity: number\n    product: Product | null\n  }[]\n  shop: Shop | null\n}\n\nexport interface BuyerAttributes {\n  genderAffinity?: Gender\n  categoryAffinities: TaxonomyCategory[]\n}\n\nexport enum Gender {\n  Male = 'MALE',\n  Female = 'FEMALE',\n  Neutral = 'NEUTRAL',\n}\n\nexport interface TaxonomyCategory {\n  id: string\n  name: string\n  ancestors?: TaxonomyCategory[]\n}\n\n/**\n * A user profile.\n */\nexport interface UserProfile {\n  /**\n   * The display name of the user.\n   */\n  displayName?: string | null\n  /**\n   * The avatar image of the user.\n   */\n  avatarImage?: {\n    url: string\n  } | null\n}\n\n/**\n * A user metafield.\n */\nexport interface UserMetafield {\n  /**\n   * The key of the user metafield.\n   */\n  key: string\n  /**\n   * The value of the user metafield.\n   */\n  value: string\n}\n\nexport interface ContentImage {\n  id: string | null\n  url: string\n  width: number | null\n  height: number | null\n}\n\nexport interface ContentProduct {\n  id: string\n  title: string\n  featuredImage: ContentImage | null\n}\n\nexport type ContentVisibility = 'DISCOVERABLE' | 'LINKABLE'\n\nexport interface Content {\n  publicId: string\n  externalId: string | null\n  image: ContentImage\n  title: string\n  description: string | null\n  visibility: ContentVisibility[]\n  shareableUrl: string | null\n  products: ContentProduct[] | null\n}\n\n/**\n * The fetch policy to use. `cache-first` will only fetch from the network if there is no\n * cached data. `network-only` will fetch from the network regardless of whether there\n * is cached data.\n */\nexport type DataHookFetchPolicy = 'cache-first' | 'network-only'\n\nexport interface DataHookOptionsBase {\n  /**\n   * When true, the data will not be fetched immediately.\n   */\n  skip?: boolean\n  /**\n   * The fetch policy to use for the initial data load. Subsequent loads may use different policies.\n   */\n  fetchPolicy?: DataHookFetchPolicy\n}\n\nexport interface PaginatedDataHookOptionsBase extends DataHookOptionsBase {\n  /**\n   * The number of products to fetch.\n   * @default 20\n   */\n  first?: number\n}\n\nexport interface DataHookReturnsBase {\n  /**\n   * Whether data is loading. Represents the initial data load but not `refetch`/`fetchMore` calls.\n   */\n  loading: boolean\n  /**\n   * The error that occurred while loading. Represents the initial data load and `refetch` calls but not `fetchMore`\n   */\n  error: Error | null\n  /**\n   * Refetch the data. Data is updated in place. The `loading` state will not update but the `error` state will.\n   */\n  refetch: () => Promise<void>\n}\n\nexport interface PaginatedDataHookReturnsBase extends DataHookReturnsBase {\n  /**\n   * Whether there is a next page to fetch.\n   */\n  hasNextPage: boolean\n  /**\n   * Fetch more data. Data is updated in place. The `loading` and `error` states will not update\n   */\n  fetchMore: () => Promise<void>\n}\n\nexport const Consent = {\n  MiniConsent: 'mini_consent',\n  CameraConsent: 'camera_consent',\n  PhotoLibraryConsent: 'photo_library_consent',\n  MicrophoneConsent: 'microphone_consent',\n} as const\n\nexport const ConsentStatus = {\n  Granted: 'granted',\n  Dismissed: 'dismissed',\n  Idle: 'idle',\n} as const\n\nexport type ConsentType = (typeof Consent)[keyof typeof Consent]\n\nexport type ConsentStatusType =\n  (typeof ConsentStatus)[keyof typeof ConsentStatus]\n\nexport interface PaginatedDataHookPageInfo {\n  /**\n   * Whether there is a next page to fetch.\n   */\n  hasNextPage: boolean\n  /**\n   * The cursor to use for the next page of data.\n   */\n  endCursor: string | null\n}\n\nexport type ProductColorFilter =\n  | 'BEIGE'\n  | 'BLACK'\n  | 'BLUE'\n  | 'BROWN'\n  | 'GOLD'\n  | 'GREEN'\n  | 'GREY'\n  | 'NAVY'\n  | 'ORANGE'\n  | 'PINK'\n  | 'PURPLE'\n  | 'RED'\n  | 'SILVER'\n  | 'WHITE'\n  | 'YELLOW'\n\nexport type ProductApparelSizeFilter =\n  | 'SIZE_3XL'\n  | 'SIZE_4XL'\n  | 'SIZE_5XL'\n  | 'SIZE_L'\n  | 'SIZE_M'\n  | 'SIZE_S'\n  | 'SIZE_XL'\n  | 'SIZE_XS'\n  | 'SIZE_XXL'\n  | 'SIZE_XXS'\n\nexport interface ProductFilters {\n  /**\n   * The apparel sizes to filter by.\n   */\n  apparelSize?: ProductApparelSizeFilter[]\n  /**\n   * Whether the product is in stock or not.\n   */\n  available?: boolean\n  /**\n   * The category IDs to filter by.\n   */\n  category?: string[]\n  /**\n   * The colors to filter by.\n   */\n  color?: ProductColorFilter[]\n  /**\n   * The gender to filter by.\n   */\n  gender?: 'MALE' | 'FEMALE' | 'NEUTRAL'\n  /**\n   * The shop IDs to include in the search.\n   */\n  includeShopIds?: string[]\n  /**\n   * The minimum rating to filter by.\n   */\n  minimumRating?: number\n  /**\n   * The price range to filter by.\n   */\n  price?: {\n    min?: number\n    max?: number\n  }\n  /**\n   * The shoe sizes to filter by.\n   */\n  shoeSize?: ProductShoeSizeFilter[]\n}\n\nexport type ProductShoeSizeFilter =\n  | 'SIZE_4'\n  | 'SIZE_4_5'\n  | 'SIZE_5'\n  | 'SIZE_5_5'\n  | 'SIZE_6'\n  | 'SIZE_6_5'\n  | 'SIZE_7'\n  | 'SIZE_7_5'\n  | 'SIZE_8'\n  | 'SIZE_8_5'\n  | 'SIZE_9'\n  | 'SIZE_9_5'\n  | 'SIZE_10'\n  | 'SIZE_10_5'\n  | 'SIZE_11'\n  | 'SIZE_11_5'\n  | 'SIZE_12'\n  | 'SIZE_12_5'\n  | 'SIZE_13'\n  | 'SIZE_13_5'\n  | 'SIZE_14'\n  | 'SIZE_14_5'\n  | 'SIZE_15'\n\nexport type ProductSizeFilter =\n  | 'SIZE_XS'\n  | 'SIZE_S'\n  | 'SIZE_M'\n  | 'SIZE_L'\n  | 'SIZE_XL'\n  | 'SIZE_XXL'\n  | 'SIZE_XXS'\n\nexport type ProductSearchSortBy =\n  | 'MOST_RECENT'\n  | 'PRICE_HIGH_TO_LOW'\n  | 'PRICE_LOW_TO_HIGH'\n  | 'RELEVANCE'\n\ndeclare global {\n  interface Window {\n    minisSDK: ShopActions\n    minisParams: MinisParams\n  }\n}\n\nexport {}\n"],"names":["CurrencyCode","Gender","Consent","ConsentStatus"],"mappings":"AAs2BY,IAAAA,sjKIA,IAAAA,KAAA,CAAA,CAAA,GAuTAC,sBAAAA,OACVA,EAAA,OAAO,QACPA,EAAA,SAAS,UACTA,EAAA,UAAU,WAHAA,IAAAA,KAAA,CAAA,CAAA;AAwHL,MAAMC,IAAU;AAAA,EACrB,aAAa;AAAA,EACb,eAAe;AAAA,EACf,qBAAqB;AAAA,EACrB,mBAAmB;AACrB,GAEaC,IAAgB;AAAA,EAC3B,SAAS;AAAA,EACT,WAAW;AAAA,EACX,MAAM;AACR;"}