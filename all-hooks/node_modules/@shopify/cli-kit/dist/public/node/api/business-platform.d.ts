import { Exact, GraphQLVariables } from './graphql.js';
import { TypedDocumentNode } from '@graphql-typed-document-node/core';
import { Variables } from 'graphql-request';
/**
 * Executes a GraphQL query against the Business Platform Destinations API.
 *
 * @param query - GraphQL query to execute.
 * @param token - Business Platform token.
 * @param variables - GraphQL variables to pass to the query.
 * @returns The response of the query of generic type <T>.
 */
export declare function businessPlatformRequest<T>(query: string, token: string, variables?: GraphQLVariables): Promise<T>;
/**
 * Executes a GraphQL query against the Business Platform Destinations API. Uses typed documents.
 *
 * @param query - GraphQL query to execute.
 * @param token - Business Platform token.
 * @param variables - GraphQL variables to pass to the query.
 * @returns The response of the query of generic type <TResult>.
 */
export declare function businessPlatformRequestDoc<TResult, TVariables extends Variables>(query: TypedDocumentNode<TResult, TVariables>, token: string, variables?: TVariables): Promise<TResult>;
/**
 * Executes a GraphQL query against the Business Platform Organizations API.
 *
 * @param query - GraphQL query to execute.
 * @param token - Business Platform token.
 * @param organizationId - Organization ID as a numeric (non-GID) value.
 * @param variables - GraphQL variables to pass to the query.
 * @returns The response of the query of generic type <T>.
 */
export declare function businessPlatformOrganizationsRequest<T>(query: string, token: string, organizationId: string, variables?: GraphQLVariables): Promise<T>;
/**
 * Executes a GraphQL query against the Business Platform Organizations API. Uses typed documents.
 *
 * @param query - GraphQL query to execute.
 * @param token - Business Platform token.
 * @param organizationId - Organization ID as a numeric value.
 * @param variables - GraphQL variables to pass to the query.
 * @returns The response of the query of generic type <T>.
 */
export declare function businessPlatformOrganizationsRequestDoc<TResult>(query: TypedDocumentNode<TResult, GraphQLVariables> | TypedDocumentNode<TResult, Exact<{
    [key: string]: never;
}>>, token: string, organizationId: string, variables?: GraphQLVariables): Promise<TResult>;
