{"version":3,"file":"custom-oclif-loader.js","sourceRoot":"","sources":["../../../src/public/node/custom-oclif-loader.ts"],"names":[],"mappings":"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","sourcesContent":["import {fileExistsSync} from './fs.js'\nimport {cwd, joinPath, sniffForPath} from './path.js'\nimport {execaSync} from 'execa'\nimport {Command, Config} from '@oclif/core'\nimport {Options} from '@oclif/core/lib/interfaces/plugin.js'\n\nexport class ShopifyConfig extends Config {\n  constructor(options: Options) {\n    const currentPath = cwd()\n\n    let path = sniffForPath() ?? currentPath\n    // Hydrogen CI uses `hydrogen/hydrogen` path, while local dev uses `shopify/hydrogen`.\n    const currentPathMightBeHydrogenMonorepo = /(shopify|hydrogen)\\/hydrogen/i.test(currentPath)\n    const ignoreHydrogenMonorepo = process.env.IGNORE_HYDROGEN_MONOREPO\n    if (currentPathMightBeHydrogenMonorepo && !ignoreHydrogenMonorepo) {\n      path = execaSync('npm', ['prefix']).stdout.trim()\n    }\n    if (fileExistsSync(joinPath(path, 'package.json'))) {\n      // Hydrogen is bundled, but we still want to support loading it as an external plugin for two reasons:\n      // 1. To allow users to use an older version of Hydrogen. (to not force upgrades)\n      // 2. To allow the Hydrogen team to load a local version for testing.\n      options.pluginAdditions = {\n        core: ['@shopify/cli-hydrogen'],\n        path,\n      }\n    }\n    super(options)\n\n    // @ts-expect-error: This is a private method that we are overriding. OCLIF doesn't provide a way to extend it.\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    this.determinePriority = this.customPriority\n  }\n\n  customPriority(commands: Command.Loadable[]): Command.Loadable | undefined {\n    const oclifPlugins = this.pjson.oclif.plugins ?? []\n    const commandPlugins = commands.sort((aCommand, bCommand) => {\n      // eslint-disable-next-line no-restricted-syntax\n      const pluginAliasA = aCommand.pluginAlias ?? 'A-Cannot-Find-This'\n      // eslint-disable-next-line no-restricted-syntax\n      const pluginAliasB = bCommand.pluginAlias ?? 'B-Cannot-Find-This'\n      const aIndex = oclifPlugins.indexOf(pluginAliasA)\n      const bIndex = oclifPlugins.indexOf(pluginAliasB)\n\n      // If there is an external cli-hydrogen plugin, its commands should take priority over bundled ('core') commands\n      if (aCommand.pluginType === 'core' && bCommand.pluginAlias === '@shopify/cli-hydrogen') {\n        // If b is hydrogen and a is core sort b first\n        return 1\n      }\n\n      if (aCommand.pluginAlias === '@shopify/cli-hydrogen' && bCommand.pluginType === 'core') {\n        // If a is hydrogen and b is core sort a first\n        return -1\n      }\n\n      // All other cases are the default implementation from the private `determinePriority` method\n      // When both plugin types are 'core' plugins sort based on index\n      if (aCommand.pluginType === 'core' && bCommand.pluginType === 'core') {\n        // If b appears first in the pjson.plugins sort it first\n        return aIndex - bIndex\n      }\n\n      // if b is a core plugin and a is not sort b first\n      if (bCommand.pluginType === 'core' && aCommand.pluginType !== 'core') {\n        return 1\n      }\n\n      // if a is a core plugin and b is not sort a first\n      if (aCommand.pluginType === 'core' && bCommand.pluginType !== 'core') {\n        return -1\n      }\n\n      // if a is a jit plugin and b is not sort b first\n      if (aCommand.pluginType === 'jit' && bCommand.pluginType !== 'jit') {\n        return 1\n      }\n\n      // if b is a jit plugin and a is not sort a first\n      if (bCommand.pluginType === 'jit' && aCommand.pluginType !== 'jit') {\n        return -1\n      }\n\n      // neither plugin is core, so do not change the order\n      return 0\n    })\n    return commandPlugins[0]\n  }\n}\n"]}