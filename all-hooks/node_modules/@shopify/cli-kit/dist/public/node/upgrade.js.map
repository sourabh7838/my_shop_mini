{"version":3,"file":"upgrade.js","sourceRoot":"","sources":["../../../src/public/node/upgrade.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,sBAAsB,EAAE,+BAA+B,EAAC,MAAM,gBAAgB,CAAA;AACtF,OAAO,EAAC,2BAA2B,EAAC,MAAM,2BAA2B,CAAA;AACrE,OAAO,EAAC,aAAa,EAAE,WAAW,EAAC,MAAM,aAAa,CAAA;AAEtD;;;;;GAKG;AACH,MAAM,UAAU,iBAAiB;IAC/B,MAAM,QAAQ,GAAG,sBAAsB,EAAE,CAAA;IACzC,IAAI,cAAc,GAAG,2BAA2B,EAAE,CAAA;IAClD,gGAAgG;IAChG,IAAI,cAAc,KAAK,SAAS,EAAE;QAChC,cAAc,GAAG,+BAA+B,EAAE,CAAA;KACnD;IACD,yGAAyG;IACzG,IAAI,cAAc,KAAK,SAAS;QAAE,cAAc,GAAG,KAAK,CAAA;IAExD,IAAI,cAAc,KAAK,MAAM,EAAE;QAC7B,OAAO,GAAG,cAAc,IAAI,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yBAAyB,CAAA;KAC/E;SAAM;QACL,MAAM,IAAI,GAAG,cAAc,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAA;QAC1D,OAAO,GAAG,cAAc,IAAI,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,qBAAqB,CAAA;KAC/E;AACH,CAAC;AAED;;;;;GAKG;AACH,MAAM,UAAU,0BAA0B,CAAC,OAAe;IACxD,OAAO,aAAa,CAAA,cAAc,OAAO,mBAAmB,WAAW,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,CAAC,EAAE;SAC/G,KAAK,CAAA;AACV,CAAC","sourcesContent":["import {currentProcessIsGlobal, inferPackageManagerForGlobalCLI} from './is-global.js'\nimport {packageManagerFromUserAgent} from './node-package-manager.js'\nimport {outputContent, outputToken} from './output.js'\n\n/**\n * Utility function for generating an install command for the user to run\n * to install an updated version of Shopify CLI.\n *\n * @returns A string with the command to run.\n */\nexport function cliInstallCommand(): string {\n  const isGlobal = currentProcessIsGlobal()\n  let packageManager = packageManagerFromUserAgent()\n  // packageManagerFromUserAgent() will return 'unknown' if it can't determine the package manager\n  if (packageManager === 'unknown') {\n    packageManager = inferPackageManagerForGlobalCLI()\n  }\n  // inferPackageManagerForGlobalCLI() will also return 'unknown' if it can't determine the package manager\n  if (packageManager === 'unknown') packageManager = 'npm'\n\n  if (packageManager === 'yarn') {\n    return `${packageManager} ${isGlobal ? 'global ' : ''}add @shopify/cli@latest`\n  } else {\n    const verb = packageManager === 'pnpm' ? 'add' : 'install'\n    return `${packageManager} ${verb} ${isGlobal ? '-g ' : ''}@shopify/cli@latest`\n  }\n}\n\n/**\n * Generates a message to remind the user to update the CLI.\n *\n * @param version - The version to update to.\n * @returns The message to remind the user to update the CLI.\n */\nexport function getOutputUpdateCLIReminder(version: string): string {\n  return outputContent`ðŸ’¡ Version ${version} available! Run ${outputToken.genericShellCommand(cliInstallCommand())}`\n    .value\n}\n"]}