import * as Types from './types.js';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type GetThemeFileBodiesQueryVariables = Types.Exact<{
    id: Types.Scalars['ID']['input'];
    after?: Types.InputMaybe<Types.Scalars['String']['input']>;
    filenames?: Types.InputMaybe<Types.Scalars['String']['input'][] | Types.Scalars['String']['input']>;
}>;
export type GetThemeFileBodiesQuery = {
    theme?: {
        files?: {
            nodes: {
                filename: string;
                size: unknown;
                checksumMd5?: string | null;
                body: {
                    __typename: 'OnlineStoreThemeFileBodyBase64';
                    contentBase64: string;
                } | {
                    __typename: 'OnlineStoreThemeFileBodyText';
                    content: string;
                } | {
                    __typename: 'OnlineStoreThemeFileBodyUrl';
                    url: string;
                };
            }[];
            userErrors: {
                filename: string;
                code: Types.OnlineStoreThemeFileResultType;
            }[];
            pageInfo: {
                hasNextPage: boolean;
                endCursor?: string | null;
            };
        } | null;
    } | null;
};
export declare const GetThemeFileBodies: DocumentNode<GetThemeFileBodiesQuery, Types.Exact<{
    id: Types.Scalars['ID']['input'];
    after?: Types.InputMaybe<string> | undefined;
    filenames?: Types.InputMaybe<string | string[]> | undefined;
}>>;
