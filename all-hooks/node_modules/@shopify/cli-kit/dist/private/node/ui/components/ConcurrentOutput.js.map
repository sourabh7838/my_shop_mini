{"version":3,"file":"ConcurrentOutput.js","sourceRoot":"","sources":["../../../../../src/private/node/ui/components/ConcurrentOutput.tsx"],"names":[],"mappings":"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","sourcesContent":["import {OutputProcess} from '../../../../public/node/output.js'\nimport {AbortSignal} from '../../../../public/node/abort.js'\nimport {addOrUpdateConcurrentUIEventOutput} from '../../demo-recorder.js'\nimport React, {FunctionComponent, useCallback, useEffect, useMemo, useState} from 'react'\nimport {Box, Static, Text, TextProps, useApp} from 'ink'\nimport figures from 'figures'\nimport stripAnsi from 'strip-ansi'\nimport {Writable} from 'stream'\nimport {AsyncLocalStorage} from 'node:async_hooks'\n\nexport interface ConcurrentOutputProps {\n  processes: OutputProcess[]\n  prefixColumnSize?: number\n  abortSignal: AbortSignal\n  showTimestamps?: boolean\n  keepRunningAfterProcessesResolve?: boolean\n  useAlternativeColorPalette?: boolean\n}\n\ninterface Chunk {\n  color: TextProps['color']\n  prefix: string\n  lines: string[]\n}\n\nfunction addLeadingZero(number: number) {\n  if (number < 10) {\n    return `0${number}`\n  } else {\n    return number.toString()\n  }\n}\n\nfunction currentTime() {\n  const currentDateTime = new Date()\n  const hours = addLeadingZero(currentDateTime.getHours())\n  const minutes = addLeadingZero(currentDateTime.getMinutes())\n  const seconds = addLeadingZero(currentDateTime.getSeconds())\n  return `${hours}:${minutes}:${seconds}`\n}\n\ninterface ConcurrentOutputContext {\n  outputPrefix?: string\n  stripAnsi?: boolean\n}\n\nconst outputContextStore = new AsyncLocalStorage<ConcurrentOutputContext>()\n\nfunction useConcurrentOutputContext<T>(context: ConcurrentOutputContext, callback: () => T): T {\n  return outputContextStore.run(context, callback)\n}\n\n/**\n * Renders output from concurrent processes to the terminal.\n * Output will be divided in a three column layout\n * with the left column containing the timestamp,\n * the right column containing the output,\n * and the middle column containing the process prefix.\n * Every process will be rendered with a different color, up to 4 colors.\n *\n * For example running `shopify app dev`:\n *\n * ```shell\n * 2022-10-10 13:11:03 | backend    | npm\n * 2022-10-10 13:11:03 | backend    |  WARN ignoring workspace config at ...\n * 2022-10-10 13:11:03 | backend    |\n * 2022-10-10 13:11:03 | backend    |\n * 2022-10-10 13:11:03 | backend    | > shopify-app-template-node@0.1.0 dev\n * 2022-10-10 13:11:03 | backend    | > cross-env NODE_ENV=development nodemon backend/index.js --watch ./backend\n * 2022-10-10 13:11:03 | backend    |\n * 2022-10-10 13:11:03 | backend    |\n * 2022-10-10 13:11:03 | frontend   |\n * 2022-10-10 13:11:03 | frontend   | > starter-react-frontend-app@0.1.0 dev\n * 2022-10-10 13:11:03 | frontend   | > cross-env NODE_ENV=development node vite-server.js\n * 2022-10-10 13:11:03 | frontend   |\n * 2022-10-10 13:11:03 | frontend   |\n * 2022-10-10 13:11:03 | backend    |\n * 2022-10-10 13:11:03 | backend    | [nodemon] to restart at any time, enter `rs`\n * 2022-10-10 13:11:03 | backend    | [nodemon] watching path(s): backend/\n * 2022-10-10 13:11:03 | backend    | [nodemon] watching extensions: js,mjs,json\n * 2022-10-10 13:11:03 | backend    | [nodemon] starting `node backend/index.js`\n * 2022-10-10 13:11:03 | backend    |\n *\n * ```\n */\nconst ConcurrentOutput: FunctionComponent<ConcurrentOutputProps> = ({\n  processes,\n  prefixColumnSize,\n  abortSignal,\n  showTimestamps = true,\n  keepRunningAfterProcessesResolve = false,\n  useAlternativeColorPalette = false,\n}) => {\n  const [processOutput, setProcessOutput] = useState<Chunk[]>([])\n  const {exit: unmountInk} = useApp()\n  const concurrentColors: TextProps['color'][] = useMemo(\n    () =>\n      useAlternativeColorPalette\n        ? ['#b994c3', '#e69e19', '#d17a73', 'cyan', 'magenta', 'blue']\n        : ['yellow', 'cyan', 'magenta', 'green', 'blue'],\n    [useAlternativeColorPalette],\n  )\n\n  const calculatedPrefixColumnSize = useMemo(() => {\n    const maxColumnSize = 25\n\n    // If the prefixColumnSize is not provided, we calculate it based on the longest process prefix\n    const columnSize =\n      prefixColumnSize ??\n      processes.reduce((maxPrefixLength, process) => Math.max(maxPrefixLength, process.prefix.length), 0)\n\n    // Apply overall limit to the prefix column size\n    return Math.min(columnSize, maxColumnSize)\n  }, [processes, prefixColumnSize])\n\n  const addPrefix = (prefix: string, prefixes: string[]) => {\n    const index = prefixes.indexOf(prefix)\n    if (index !== -1) {\n      return index\n    }\n    prefixes.push(prefix)\n    return prefixes.length - 1\n  }\n\n  const lineColor = useCallback(\n    (index: number) => {\n      const colorIndex = index % concurrentColors.length\n      return concurrentColors[colorIndex]\n    },\n    [concurrentColors],\n  )\n\n  const writableStream = useCallback(\n    (process: OutputProcess, prefixes: string[]) => {\n      return new Writable({\n        write(chunk, _encoding, next) {\n          const context = outputContextStore.getStore()\n          const prefix = context?.outputPrefix ?? process.prefix\n          const shouldStripAnsi = context?.stripAnsi ?? true\n          const log = chunk.toString('utf8').replace(/(\\n)$/, '')\n\n          const index = addPrefix(prefix, prefixes)\n\n          const lines = shouldStripAnsi ? stripAnsi(log).split(/\\n/) : log.split(/\\n/)\n          addOrUpdateConcurrentUIEventOutput({prefix, index, output: lines.join('\\n')})\n          setProcessOutput((previousProcessOutput) => [\n            ...previousProcessOutput,\n            {\n              color: lineColor(index),\n              prefix,\n              lines,\n            },\n          ])\n          next()\n        },\n      })\n    },\n    [lineColor],\n  )\n\n  const formatPrefix = (prefix: string) => {\n    // Truncate prefix if needed\n    if (prefix.length > calculatedPrefixColumnSize) {\n      return prefix.substring(0, calculatedPrefixColumnSize)\n    }\n\n    return `${' '.repeat(calculatedPrefixColumnSize - prefix.length)}${prefix}`\n  }\n\n  useEffect(() => {\n    const runProcesses = async () => {\n      const prefixes: string[] = []\n\n      try {\n        await Promise.all(\n          processes.map(async (process) => {\n            const stdout = writableStream(process, prefixes)\n            const stderr = writableStream(process, prefixes)\n            await process.action(stdout, stderr, abortSignal)\n          }),\n        )\n        if (!keepRunningAfterProcessesResolve) {\n          unmountInk()\n        }\n        // eslint-disable-next-line no-catch-all/no-catch-all\n      } catch (error: unknown) {\n        if (!keepRunningAfterProcessesResolve) {\n          unmountInk(error as Error | undefined)\n        }\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    runProcesses()\n  }, [abortSignal, processes, writableStream, unmountInk, keepRunningAfterProcessesResolve])\n\n  const {lineVertical} = figures\n\n  return (\n    <Static items={processOutput}>\n      {(chunk, index) => {\n        return (\n          <Box flexDirection=\"column\" key={index}>\n            {chunk.lines.map((line, index) => (\n              <Box key={index} flexDirection=\"row\">\n                <Text>\n                  {showTimestamps ? (\n                    <Text>\n                      {currentTime()} {lineVertical}{' '}\n                    </Text>\n                  ) : null}\n                  <Text color={chunk.color}>{formatPrefix(chunk.prefix)}</Text>\n                  <Text>\n                    {' '}\n                    {lineVertical} {line}\n                  </Text>\n                </Text>\n              </Box>\n            ))}\n          </Box>\n        )\n      }}\n    </Static>\n  )\n}\nexport {ConcurrentOutput, ConcurrentOutputContext, useConcurrentOutputContext}\n"]}