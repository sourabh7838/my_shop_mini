import {useState} from 'react'
import {ScrollView} from 'react-native'
import {useNavigation} from '@react-navigation/native'
import {NativeStackNavigationProp} from '@react-navigation/native-stack'
import {
  Box,
  SafeAreaView,
  Text,
  ProductCard,
  useProductSearch,
  useTheme,
  Button,
  TextField,
  Divider,
  Shelf,
} from '@shopify/shop-minis-sdk'

import {RootStackParamList} from '../types/screens'

export function HomeScreen() {
  const theme = useTheme()
  const navigation =
    useNavigation<NativeStackNavigationProp<RootStackParamList>>()
  const [searchQuery, setSearchQuery] = useState('Skateboard')

  const {products, loading} = useProductSearch({
    query: searchQuery,
    first: 4,
    filters: {
      minimumRating: 4,
      price: {
        min: 100,
        max: 250,
      },
    },
  })

  return (
    <SafeAreaView
      style={{flex: 1, backgroundColor: theme.colors['backgrounds-regular']}}
    >
      <ScrollView>
        <Box
          flex={1}
          paddingHorizontal="gutter"
          marginBottom="s"
          backgroundColor="backgrounds-regular"
        >
          <Text variant="heroBold" marginBottom="s" marginTop="xs">
            Welcome to Shop Minis
          </Text>
          <Text variant="subtitle" marginBottom="s">
            Build powerful mobile commerce experiences with our SDK
          </Text>
          <Text variant="subtitle">Let's explore the key features.</Text>
          <Divider marginVertical="s" />

          <Text marginBottom="s">
            Search for products using the{' '}
            <Text color="text-brand">useProductSearch</Text> hook. This hook
            provides real-time product search with filtering capabilities.
          </Text>
          <Box>
            <TextField
              placeholder="Skateboard"
              value={searchQuery}
              onChangeText={setSearchQuery}
            />
          </Box>

          <Divider marginVertical="s" />

          <Box>
            <Text marginBottom="s">
              Display product collections using the{' '}
              <Text color="text-brand">ProductCard</Text> and{' '}
              <Text color="text-brand">Shelf</Text> components. These components
              handle layout, touch interactions, and product display
              automatically.
            </Text>
            {loading ? (
              <Text>Loading products...</Text>
            ) : products && products.length > 0 ? (
              <Box height={200}>
                <Shelf
                  data={products}
                  renderItem={({item}) => (
                    <Box key={item.id} width={150}>
                      <ProductCard product={item} />
                    </Box>
                  )}
                />
              </Box>
            ) : (
              <Text>No products found</Text>
            )}
          </Box>

          <Divider marginVertical="s" />

          <Text variant="subtitle" marginBottom="s">
            Check our docs to learn more about the powerful product hooks:
          </Text>

          <Text color="text-brand">
            - useRecommendedProducts:
            <Text> Get personalized product recommendations</Text>
          </Text>
          <Text color="text-brand">
            - useSavedProducts:<Text> Access user's saved products</Text>
          </Text>
          <Text color="text-brand">
            - useRecentProducts:<Text> Display recently viewed products</Text>
          </Text>
          <Divider marginVertical="s" />
          <Text marginBottom="s">
            Ready for more? Let&apos;s explore native capabilities in the
            screen.
          </Text>
          <Button
            text="Next"
            size="l"
            onPress={() => {
              navigation.navigate('GettingStarted.NativeFeatures')
            }}
          />
        </Box>
      </ScrollView>
    </SafeAreaView>
  )
}
