import {execSync} from 'node:child_process'
import {readdir} from 'node:fs/promises'
import path from 'node:path'

import {Command} from 'commander'

const __dirname = path.resolve()

const program = new Command()
  .name('test-create-mini-standalone')
  .description('Creates a standalone mini and checks that it is valid')
  .argument('<example-name>', 'Name of the example to use')
  .action(async (exampleName: string) => {
    const examples = await readdir(
      path.join(
        __dirname,
        'src',
        'commands',
        'create-mini',
        'standalone',
        'examples'
      )
    )

    if (!examples.includes(exampleName)) {
      console.log(
        `\n${exampleName} is not a valid example name. Please use one of ${examples.join(
          ', '
        )}\n`
      )
      process.exit(1)
    }

    // build the CLI
    execSync('yarn build:cli', {stdio: 'inherit'})

    // set up folder structure
    execSync('mkdir -p ../minis/', {stdio: 'inherit'})
    execSync('rm -rf ../minis/test-standalone', {stdio: 'inherit'}) // just in case this wasn't deleted before

    // build mini
    execSync(
      `yarn shop-minis create test-standalone --example ${exampleName} --output-dir ../minis/`,
      {
        stdio: 'inherit',
      }
    )

    // print package.json
    execSync(`cat ../minis/test-standalone/package.json`, {stdio: 'inherit'})

    // run eslint
    try {
      execSync('cd ../minis/test-standalone && yarn lint', {stdio: 'inherit'})
    } catch {
      console.log(`\n ⚠️  eslint failed. To reproduce run: 
        $ cd ../minis/test-standalone
        $ yarn lint
      `)
      process.exit(1)
    }

    // run typescript checks
    try {
      execSync('cd ../minis/test-standalone && yarn tsc', {
        stdio: 'inherit',
      })
    } catch {
      console.log(`\n ⚠️  typescript failed. To reproduce run: 
        $ cd ../minis/test-standalone
        $ yarn tsc
      `)
      process.exit(1)
    }

    // clean up
    execSync('rm -rf ../minis/test-standalone', {stdio: 'inherit'})
  })

program.parse()
