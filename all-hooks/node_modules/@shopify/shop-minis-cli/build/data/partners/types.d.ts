export type AccountInfo = UserAccountInfo | ServiceAccountInfo | UnknownAccountInfo;
export interface UserAccountInfo {
    type: 'UserAccount';
    email: string;
}
export interface ServiceAccountInfo {
    type: 'ServiceAccount';
    orgName: string;
}
export interface UnknownAccountInfo {
    type: 'UnknownAccount';
}
export interface PartnersSession {
    token: string;
    accountInfo: AccountInfo;
    userId: string;
}
export type AccountInfoSchema = {
    __typename: 'UserAccount';
    email: string;
} | {
    __typename: 'ServiceAccount';
    orgName: string;
};
export interface CurrentAccountInfoSchema {
    currentAccountInfo: AccountInfoSchema;
}
export interface AllOrgsSchema {
    organizations: {
        nodes: {
            __typename: string;
            id: string;
            businessName: string;
        }[];
    };
}
export declare enum OrganizationSource {
    Partners = "Partners",
    BusinessPlatform = "BusinessPlatform"
}
export interface Organization {
    id: string;
    businessName: string;
    source?: OrganizationSource;
}
export type Paginateable<T> = T & {
    hasMorePages: boolean;
};
export interface MinimalAppIdentifiers {
    id: string;
    apiKey: string;
}
export type MinimalOrganizationApp = MinimalAppIdentifiers & {
    title: string;
};
