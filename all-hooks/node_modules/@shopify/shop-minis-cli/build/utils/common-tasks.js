import { ClientError } from 'graphql-request';
import { AbortError } from '@shopify/cli-kit/node/error';
import { SHOP_MINIS_ADMIN_API_KEY } from '../commands/config.js';
import { getSubmissions as graphqlGetSubmissions } from '../data/get-submissions.js';
import { getRunBinCommand } from './package-manager.js';
export async function assertNetworkAndAuth() {
    const apiKey = SHOP_MINIS_ADMIN_API_KEY;
    const setupCmd = await getRunBinCommand('shop-minis setup');
    if (!apiKey) {
        throw new AbortError('Shop Minis API key is not set.', undefined, [
            [
                'Before continuing, run',
                { bold: setupCmd },
                'to set up your Shop Minis API key.',
            ],
        ]);
    }
    try {
        // Use this query as a simple way to check network and auth at the same time
        await graphqlGetSubmissions();
    }
    catch (error) {
        if (error instanceof ClientError && error.response.status === 401) {
            throw new AbortError('Unable to authenticate your account', 'Your Shop Minis Admin API key is invalid.\n', [
                [
                    'Before continuing, run',
                    { bold: setupCmd },
                    'to set up your Shop Minis API key.',
                ],
            ]);
        }
        if (error instanceof Object &&
            'code' in error &&
            error?.code === 'ENOTFOUND') {
            const submitCmd = await getRunBinCommand('shop-minis submit');
            throw new AbortError(`Network error`, 'Try again and if the issue continues, contact us.', [
                `Try to run "${submitCmd}" again`,
                "Contact Shop if you're having issues",
            ]);
        }
        throw error;
    }
}
//# sourceMappingURL=common-tasks.js.map