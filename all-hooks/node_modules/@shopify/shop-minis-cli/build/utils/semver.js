import { lte, coerce as coerceVersionToSemver } from 'semver';
import { AbortError } from '@shopify/cli-kit/node/error';
export function validateUpgradeBetweenVersions(fromVersion, toVersion) {
    const fromVersionSemver = coerceVersionToSemver(fromVersion);
    const toVersionSemver = coerceVersionToSemver(toVersion);
    if (!fromVersionSemver || !toVersionSemver) {
        const versionWithError = fromVersionSemver ? toVersion : fromVersion;
        throw new AbortError('The provided version is not a valid semver string', undefined, [
            [
                `The specified value was "${versionWithError}"`,
                `Read more about semantic versioning in https://semver.org/`,
            ],
        ]);
    }
    if (lte(toVersionSemver, fromVersionSemver)) {
        throw new AbortError('The provided target version must be bigger than the base version', undefined, [[`Target version is "${toVersion}"`, `Base version is "${fromVersion}"`]]);
    }
}
//# sourceMappingURL=semver.js.map