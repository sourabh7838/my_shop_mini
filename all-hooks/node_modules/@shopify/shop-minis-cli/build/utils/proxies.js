import colors from '@shopify/cli-kit/node/colors';
import { diffLines } from 'diff';
import { HttpRequestMethod } from '../data/types/autogenerated/shop-minis-admin-api/graphql.js';
import { getMiniManifest } from './minis-manifest.js';
// Convert the remote proxy to the manifest proxy format
// We don't set null values because they are the default and make the diffs larger than they need to be
export const remoteProxyToManifestProxy = proxy => {
    // Required fields
    const manifestProxy = {
        target_url_pattern: proxy.targetUrlPattern,
    };
    // Optional fields, we only set them if they are meaningfully different from the defaults
    if (proxy.allowedMethods !== null) {
        manifestProxy.allowed_methods = proxy.allowedMethods;
    }
    if (proxy.appendedHeaders !== null) {
        manifestProxy.appended_headers = proxy.appendedHeaders;
    }
    if (proxy.bodyJsonSchema !== null) {
        manifestProxy.body_json_schema = proxy.bodyJsonSchema;
    }
    if (typeof proxy.userRateLimitInterval === 'number') {
        manifestProxy.user_rate_limit_interval = proxy.userRateLimitInterval;
    }
    if (typeof proxy.userRateLimitRequests === 'number') {
        manifestProxy.user_rate_limit_requests = proxy.userRateLimitRequests;
    }
    return manifestProxy;
};
export const remoteProxiesToManifestProxies = remoteProxies => {
    return remoteProxies.map(remoteProxyToManifestProxy);
};
// Convert the manifest proxy to the remote proxy format
export const manifestProxyToRemoteProxy = proxy => {
    const remoteProxy = {
        targetUrlPattern: proxy.target_url_pattern,
        allowedMethods: proxy.allowed_methods,
        appendedHeaders: proxy.appended_headers,
        bodyJsonSchema: proxy.body_json_schema,
        userRateLimitInterval: proxy.user_rate_limit_interval,
        userRateLimitRequests: proxy.user_rate_limit_requests,
    };
    return remoteProxy;
};
export const manifestProxiesToRemoteProxies = manifestProxies => {
    return manifestProxies.map(manifestProxyToRemoteProxy);
};
export const allowedMethodsMap = {
    GET: HttpRequestMethod.Get,
    POST: HttpRequestMethod.Post,
    PUT: HttpRequestMethod.Put,
    DELETE: HttpRequestMethod.Delete,
    PATCH: HttpRequestMethod.Patch,
};
const lines = (value) => {
    return value.split(/\n/).filter(line => line !== '');
};
// Copied to modify from cli-kit
// https://github.com/Shopify/cli/blob/5dc24c6126d727c4384a35ab32f2ef7104d06556/packages/cli-kit/src/private/node/content-tokens.ts#L60
const diffString = (value) => {
    return value
        .map(part => {
        if (part.added) {
            return lines(part.value).map(line => {
                return colors.green(`+ ${line}\n`);
            });
        }
        else if (part.removed) {
            return lines(part.value).map(line => {
                return colors.magenta(`- ${line}\n`);
            });
        }
        else {
            return lines(part.value).map(line => {
                return `  ${line}\n`;
            });
        }
    })
        .flat()
        .join('');
};
export const proxiesDiff = (remoteProxies, localProxies) => {
    const diff = diffLines(JSON.stringify(remoteProxies, null, 2), JSON.stringify(localProxies, null, 2));
    return {
        changes: diff,
        string: diffString(diff),
    };
};
export const getLocalProxies = () => {
    const manifest = getMiniManifest();
    const defaultLocalProxies = [];
    const localProxies = manifest?.proxies?.map((proxy) => {
        const manifestProxy = {
            target_url_pattern: proxy.target_url_pattern,
            allowed_methods: proxy.allowed_methods?.map(allowedMethod => allowedMethodsMap[allowedMethod]),
            appended_headers: proxy.appended_headers,
            body_json_schema: proxy.body_json_schema,
            user_rate_limit_interval: proxy.user_rate_limit_interval,
            user_rate_limit_requests: proxy.user_rate_limit_requests,
        };
        return manifestProxy;
    }) ?? defaultLocalProxies;
    return localProxies;
};
//# sourceMappingURL=proxies.js.map