import { promisify } from 'util';
import { exec } from 'child_process';
import ora from 'ora';
const _execAsync = promisify(exec);
export async function execAsync(cmdConfig, ...args) {
    if (typeof cmdConfig === 'string') {
        cmdConfig = { cmd: cmdConfig }; // eslint-disable-line no-param-reassign
    }
    const loadingIndicator = ora(cmdConfig.spinnerOptions);
    if (cmdConfig.loadingMessage) {
        loadingIndicator.start(cmdConfig.loadingMessage);
    }
    let stderr = '';
    let stdout = '';
    try {
        const result = await _execAsync(cmdConfig.cmd, ...args);
        stderr = result.stderr;
        stdout = result.stdout;
    }
    catch (err) {
        if (loadingIndicator.isSpinning) {
            loadingIndicator.fail(cmdConfig.errorMessage);
            console.log('\n');
        }
        throw err;
    }
    if (loadingIndicator.isSpinning) {
        loadingIndicator.succeed(cmdConfig.successMessage);
    }
    if (typeof stdout !== 'string') {
        stdout = stdout.toString('utf8');
    }
    if (typeof stderr !== 'string') {
        stderr = stderr.toString('utf8');
    }
    return {
        stdout: stdout.split(/[\n\r\t]+/).filter(Boolean),
        stderr: stderr.split(/[\n\r\t]+/).filter(Boolean),
    };
}
//# sourceMappingURL=exec-async-child-process.js.map