import { ExtensionTarget, ExtensionType } from '../../constants/extensions.js';
import { ExtensionPage } from './types.js';
export const DEFAULT_OUTPUT_DIR = 'src/targets';
export const EXTENSION_TYPE_CONFIG = {
    [ExtensionType.BLANK]: {
        label: 'Blank',
    },
    [ExtensionType.LINK]: {
        label: 'Link',
    },
    [ExtensionType.DEFAULT_CARD]: {
        label: 'Default Card',
    },
    [ExtensionType.PRODUCT_OFFER_CARD]: {
        label: 'Product Offer Card',
    },
    [ExtensionType.VIDEO_COLLECTION]: {
        label: 'Video Collection',
    },
    [ExtensionType.IMAGE_COLLECTION]: {
        label: 'Image Collection',
    },
    [ExtensionType.BUNDLE_SELECTOR]: {
        label: 'Bundle Selector',
    },
    [ExtensionType.BUNDLE_COLLECTION]: {
        label: 'Bundle Collection',
    },
    [ExtensionType.BUNDLE_UPSELL]: {
        label: 'Bundle Upsell',
    },
    [ExtensionType.SURVEY_SINGLE_RESPONSE]: {
        label: 'Survey Single Response',
    },
};
// Add to this as new templates are created and they will appear in the CLI as options automatically
export const EXTENSION_PAGE_CONFIG = {
    [ExtensionPage.PRODUCT_PAGE]: {
        templates: [
            ExtensionType.BLANK,
            ExtensionType.LINK,
            ExtensionType.DEFAULT_CARD,
            ExtensionType.IMAGE_COLLECTION,
            ExtensionType.VIDEO_COLLECTION,
            ExtensionType.BUNDLE_SELECTOR,
            ExtensionType.BUNDLE_COLLECTION,
            ExtensionType.BUNDLE_UPSELL,
        ],
    },
    [ExtensionPage.STORE_PAGE]: {
        templates: [
            ExtensionType.BLANK,
            ExtensionType.LINK,
            ExtensionType.DEFAULT_CARD,
            ExtensionType.IMAGE_COLLECTION,
            ExtensionType.VIDEO_COLLECTION,
        ],
    },
    [ExtensionPage.ORDER_CONFIRMATION_PAGE]: {
        templates: [
            ExtensionType.BLANK,
            ExtensionType.PRODUCT_OFFER_CARD,
            ExtensionType.SURVEY_SINGLE_RESPONSE,
        ],
    },
    [ExtensionPage.ORDER_MANAGEMENT_PAGE]: {
        templates: [
            ExtensionType.BLANK,
            ExtensionType.PRODUCT_OFFER_CARD,
            ExtensionType.SURVEY_SINGLE_RESPONSE,
        ],
    },
};
export const EXTENSION_TARGET_CONFIG = {
    [ExtensionTarget['shop.product.variants.render-before']]: {
        label: 'Product Page - Before Variants Picker',
        page: ExtensionPage.PRODUCT_PAGE,
    },
    [ExtensionTarget['shop.product.policies.render-after']]: {
        label: 'Product Page - After Description and policies',
        page: ExtensionPage.PRODUCT_PAGE,
    },
    [ExtensionTarget['shop.product.block.render']]: {
        label: 'Product Page - Default',
        page: ExtensionPage.PRODUCT_PAGE,
    },
    [ExtensionTarget['shop.store.block.render']]: {
        label: 'Store Page - Default',
        page: ExtensionPage.STORE_PAGE,
    },
    [ExtensionTarget['shop.order-confirmation-page.order-details.render-after']]: {
        label: 'Order Confirmation Page - After Order Details',
        page: ExtensionPage.ORDER_CONFIRMATION_PAGE,
    },
    [ExtensionTarget['shop.order-management.order-details.render-after']]: {
        label: 'Order Management Page - After Order Details',
        page: ExtensionPage.ORDER_MANAGEMENT_PAGE,
    },
    [ExtensionTarget['shop.order-management.visit-shop.render-after']]: {
        label: 'Order Management Page - After Visit Shop Button',
        page: ExtensionPage.ORDER_MANAGEMENT_PAGE,
    },
};
export const EXTENSION_TARGETS_WITH_TEMPLATES = Object.entries(EXTENSION_TARGET_CONFIG).reduce((acc, [key, value]) => {
    if (EXTENSION_PAGE_CONFIG[value.page].templates.length > 0) {
        acc[key] = value;
    }
    return acc;
}, {});
export const EXTENSION_TARGETS_WITH_TEMPLATES_KEYS = Object.keys(EXTENSION_TARGETS_WITH_TEMPLATES);
//# sourceMappingURL=constants.js.map