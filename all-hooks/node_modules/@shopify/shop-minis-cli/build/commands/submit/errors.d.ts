import { AbortError } from '@shopify/cli-kit/node/error';
import { CreateSubmissionMutation, CreateUploadMutation, SubmissionsQuery } from '../../data/types/autogenerated/shop-minis-admin-api/graphql.js';
import { CreateUploadParameters } from '../../data/create-upload.js';
type UnwrapArray<T> = T extends Array<infer R> ? R : never;
interface UserErrorShape {
    code: string;
    message: string;
    field?: Array<string> | null;
}
interface WrapErrorOptions {
    separator?: string;
}
export declare const wrapError: (error: any, message: string, userOptions?: WrapErrorOptions) => Error;
export declare const userErrorToErrorMessage: ({ code, message, field, }: UserErrorShape) => string;
export declare const handleCreateUploadErrors: (params: CreateUploadParameters, userErrors?: CreateUploadMutation['submissionUploadCreate']['userErrors']) => void;
export declare const generateExistingPendingSubmissionError: (pendingSubmission: UnwrapArray<SubmissionsQuery['submissions']['nodes']> | null) => Promise<AbortError>;
export declare const handleCreateSubmissionErrors: (userErrors?: CreateSubmissionMutation['submissionCreate']['userErrors']) => Promise<void>;
export declare const handleUploadFileErrors: (error: any) => never;
export {};
