export declare function assertNoPendingSubmissions(): Promise<void>;
export declare function assertManifestValid(): void;
export declare function assertRequiredAssets(): Promise<void>;
interface PackageShopMiniParams {
    inputDirectory: string;
    outputArchivePath: string;
    matchFilePattern: string;
    ignore: string[];
}
export declare const packageShopMini: ({ inputDirectory, outputArchivePath, matchFilePattern, ignore, }: PackageShopMiniParams) => Promise<void>;
interface CreateStagedUploadParams {
    outputArchiveFilename: string;
    outputArchivePath: string;
}
export declare const createStagedUpload: ({ outputArchiveFilename, outputArchivePath, }: CreateStagedUploadParams) => Promise<{
    __typename?: "StagedUpload" | undefined;
    url: any;
    headers: string;
    id: string;
} | null | undefined>;
interface UploadSubmissionParams {
    url: string;
    headers: Record<string, string>;
    outputArchivePath: string;
}
export declare const uploadSubmission: ({ url, headers, outputArchivePath, }: UploadSubmissionParams) => Promise<void>;
interface CreateSubmissionParams {
    description: string;
    stagedUploadId: string;
}
export declare const createSubmission: ({ description, stagedUploadId, }: CreateSubmissionParams) => Promise<{
    __typename?: "Submission" | undefined;
    reference: string;
    description: string;
    status: import("../../data/types/autogenerated/shop-minis-admin-api/graphql.js").SubmissionStatus;
    submittedAt: any;
} | null | undefined>;
export {};
