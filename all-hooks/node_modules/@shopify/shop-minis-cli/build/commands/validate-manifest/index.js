import { Command } from 'commander';
import { outputDebug, outputSuccess } from '@shopify/cli-kit/node/output';
import { AbortError, handler as handleError } from '@shopify/cli-kit/node/error';
import { DEFAULT_MANIFEST_PATH, validateManifest, } from '../../utils/minis-manifest.js';
export const command = new Command()
    .name('validate-manifest')
    .description('Validate the manifest file.')
    .option('--path <path>', 'The path to your manifest file.', DEFAULT_MANIFEST_PATH)
    .option('--verbose', 'Print debugging messages.')
    .action(async (options) => {
    outputDebug(`Validating manifest file at path ${options.path}`);
    try {
        const { valid, errors } = validateManifest(options.path);
        if (valid) {
            outputSuccess('Your manifest is valid');
        }
        else {
            const errorMessages = errors
                .map((error) => {
                if (typeof error === 'object' &&
                    error.field === 'trusted_domains') {
                    return `  • ${error.message} (${error.invalidDomain})`;
                }
                return `  • ${error}`;
            })
                .join('\n');
            throw new AbortError('Invalid Manifest. Errors:', errorMessages);
        }
    }
    catch (err) {
        delete err.stack;
        await handleError(err);
    }
});
export function loadCommand(parentProgram) {
    parentProgram.addCommand(command, {
        hidden: true,
    });
}
//# sourceMappingURL=index.js.map