// TODO: worth adding some specs
export async function withRetries(getResult, isResultReady = Boolean, { maxRetries, timeBetweenRetries } = { timeBetweenRetries: 1000, maxRetries: 120 }) {
    if (maxRetries === 0) {
        throw new Error();
    }
    try {
        const result = await getResult();
        if (isResultReady(result)) {
            return result;
        }
    }
    catch {
        // do nothing
    }
    return new Promise(resolve => {
        setTimeout(() => {
            resolve(withRetries(getResult, isResultReady, {
                timeBetweenRetries,
                maxRetries: maxRetries - 1,
            }));
        }, timeBetweenRetries);
    });
}
//# sourceMappingURL=with-retries.js.map