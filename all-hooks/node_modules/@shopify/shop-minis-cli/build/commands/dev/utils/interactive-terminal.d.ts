import ngrok from '@ngrok/ngrok';
import type { DevCommandOptions } from '../react-native.js';
import { LoadingStateHandlers } from '../../../utils/loading-state-handlers.js';
import { Platform } from './platform.js';
export declare class InteractiveTerminal {
    miniHandle: string;
    options: DevCommandOptions;
    isWeb: boolean;
    loadingHandlers: LoadingStateHandlers;
    currentPlatform: Platform | null;
    currentDeviceId: string | null;
    tunnelListener: ngrok.Listener | undefined;
    constructor({ options, miniHandle, isWeb, tunnelListener, }: {
        options: DevCommandOptions;
        miniHandle: string;
        isWeb: boolean;
        tunnelListener: ngrok.Listener | undefined;
    });
    startWaitingForCommand: () => void;
    stopWaitingForCommand: () => void;
    waitForAnyKeyAndPrintInstructions: () => Promise<void>;
    logInstructions(): void;
    start(): void;
    handleKeyPressWrapped: (key: string) => Promise<void>;
    handleKeyPress: (key: string) => Promise<void>;
    showSetupAndroidHomeInstructions(): Promise<void>;
    private startApp;
    private openDeeplink;
    private get deeplink();
    private getCurrentPlatformAndDeviceId;
}
