import { Terminal } from 'metro-core';
import { TerminalReporter } from 'metro';
import chalk from 'chalk';
export const DEFAULT_MINIS_PROMPT = `\n \nâ€º Press ${chalk.cyan.bold('?')} to show all commands\n `;
/**
 * Custom metro reporter that customises the output to the terminal of minis.
 *
 * Reference:
 * Default reporter: https://github.com/facebook/metro/blob/main/packages/metro/src/lib/TerminalReporter.js
 * Expo example: https://github.com/expo/expo/blob/main/packages/%40expo/cli/src/start/server/metro/MetroTerminalReporter.ts
 */
class MinisMetroReporter extends TerminalReporter {
    initialised = false;
    _log(event) {
        switch (event.type) {
            case 'initialize_done': {
                this.initialised = true;
                break;
            }
            case 'initialize_started':
            case 'dep_graph_loading': {
                // do not log metro logo and welcome on start
                return;
            }
        }
        // @ts-ignore
        super._log(event);
    }
    /**
     * Metro calls status message to the static log at the bottom of the log stream.
     * Metro will keep this string present at the bottom even after other logs are streamed.
     * See: https://github.com/facebook/metro/blob/main/packages/metro/src/lib/TerminalReporter.js#L399
     */
    _getStatusMessage() {
        // @ts-ignore
        const metroStatus = super._getStatusMessage();
        if (!this.initialised) {
            return metroStatus;
        }
        return metroStatus || DEFAULT_MINIS_PROMPT;
    }
}
export function createMinisMetroReporter() {
    return new MinisMetroReporter(new Terminal(process.stdout));
}
//# sourceMappingURL=metro-reporter.js.map