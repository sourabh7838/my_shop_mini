import fs from 'fs';
import path from 'path';
export function getEnvConfigValue(envConfigKey) {
    const envFilePath = path.join(process.cwd(), '.env');
    const envContent = readEnvContent(envFilePath);
    const lines = envContent.split('\n');
    for (const line of lines) {
        const [key, value] = line.split('=');
        if (key === envConfigKey) {
            return value;
        }
    }
    return undefined;
}
export function setEnvConfigValue(envConfigKey, envConfigValue) {
    const envFilePath = path.join(process.cwd(), '.env');
    const envContent = readEnvContent(envFilePath);
    let keyExists = false;
    let newContent = envContent
        .split('\n')
        .map(line => {
        if (line.startsWith(`${envConfigKey}=`)) {
            keyExists = true;
            return `${envConfigKey}=${envConfigValue}`;
        }
        return line;
    })
        .join('\n');
    if (!keyExists) {
        // Only add a newline if the file is not empty
        if (envContent.length > 0)
            newContent += '\n';
        newContent += `${envConfigKey}=${envConfigValue}`;
    }
    fs.writeFileSync(envFilePath, newContent);
}
function readEnvContent(envFilePath) {
    let envContent;
    try {
        envContent = fs.readFileSync(envFilePath, 'utf-8');
    }
    catch (error) {
        envContent = '';
    }
    return envContent;
}
//# sourceMappingURL=env-config.js.map