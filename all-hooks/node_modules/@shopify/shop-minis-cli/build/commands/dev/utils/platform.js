export var Platform;
(function (Platform) {
    Platform["IOS"] = "ios";
    Platform["Android"] = "android";
})(Platform || (Platform = {}));
/**
 * Returns the platform for a given file extension.
 */
export function getPlatformForBinaryFileExtension(extension) {
    const platform = Object.values(Platform).find(aPlatform => platformConfigs[aPlatform].extension === extension);
    if (platform == null) {
        throw new Error(`Invalid extension: ${extension}`);
    }
    return platform;
}
/**
 * Returns the platform config for a given platform.
 */
export function getPlatformConfig(platform) {
    if (typeof platform === 'object') {
        return platform;
    }
    const config = platformConfigs[platform];
    if (config == null) {
        throw new Error(`Invalid platform: ${platform}`);
    }
    return Object.freeze(config);
}
const platformConfigs = {
    ios: {
        platform: Platform.IOS,
        name: 'iOS',
        extension: 'app.zip',
    },
    android: {
        platform: Platform.Android,
        name: 'Android',
        extension: 'apk',
    },
};
//# sourceMappingURL=platform.js.map