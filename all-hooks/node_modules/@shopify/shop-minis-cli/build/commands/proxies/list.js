import { Command } from 'commander';
import { renderInfo } from '@shopify/cli-kit/node/ui';
import { handler as handleError } from '@shopify/cli-kit/node/error';
import { proxiesList } from '../../data/proxies/proxies-list.js';
import { assertNetworkAndAuth } from '../../utils/common-tasks.js';
import { getLocalProxies, proxiesDiff, remoteProxiesToManifestProxies, } from '../../utils/proxies.js';
import { getRunBinCommand } from '../../utils/package-manager.js';
export const command = new Command()
    .name('list')
    .description('Show the configured proxies.')
    .action(async () => {
    try {
        await assertNetworkAndAuth();
        // Get the remote proxies and convert them to the manifest proxy format
        // This makes nicer diffs for the user (it excludes default values too)
        const remoteProxies = remoteProxiesToManifestProxies(await proxiesList());
        const localProxies = getLocalProxies();
        const { string: diffString, changes } = proxiesDiff(remoteProxies, localProxies);
        if (remoteProxies.length === 0 && localProxies.length === 0) {
            renderInfo({
                headline: 'No proxies found',
            });
        }
        else if (changes.length === 1) {
            renderInfo({
                headline: 'Proxy config is in sync',
                body: JSON.stringify(remoteProxies, null, 2),
            });
        }
        else {
            renderInfo({
                headline: 'Changes found. Local proxy config has not been applied. See diff below:',
                body: [diffString],
                nextSteps: [
                    [
                        'Run',
                        { command: await getRunBinCommand('shop-minis proxies apply') },
                        'to apply the proxy config to your mini',
                    ],
                ],
            });
        }
    }
    catch (error) {
        handleError(error);
    }
});
//# sourceMappingURL=list.js.map