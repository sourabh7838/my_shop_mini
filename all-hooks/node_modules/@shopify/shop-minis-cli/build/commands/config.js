import { createRequire } from 'node:module';
import path from 'node:path';
import { existsSync, mkdirSync } from 'node:fs';
import * as dotenv from 'dotenv';
dotenv.config();
const DEFAULT_ANDROID_HOME_MACOS = `${process.env.HOME}/Library/Android/sdk`;
export function whichAndroidHome() {
    if (process.env.ANDROID_HOME) {
        return process.env.ANDROID_HOME;
    }
    if (existsSync(DEFAULT_ANDROID_HOME_MACOS)) {
        return DEFAULT_ANDROID_HOME_MACOS;
    }
    return null;
}
export function androidHomeExists() {
    return Boolean(whichAndroidHome());
}
export function whichEmulator() {
    return `${whichAndroidHome()}/emulator/emulator`;
}
export function whichAdb() {
    return `${whichAndroidHome()}/platform-tools/adb`;
}
export const CLI_VERSION = createRequire(import.meta.url)('../../package.json').version;
export const PATHS = {
    CACHE_DIR: path.resolve(process.cwd(), '.minis-cache'),
};
export const EMAILS = {
    CONTACT_US: 'shopminisdevelopers@shopify.com',
};
export const SHOP_MINIS_ADMIN_API = 'https://server.shop.app/minis/admin-api/alpha/graphql.json';
export const SHOP_MINIS_ADMIN_API_KEY = process.env.SHOP_MINIS_API_KEY;
// Create the cache directory if it doesn't exist.
try {
    mkdirSync(PATHS.CACHE_DIR);
}
catch {
    // directory already exists. do nothing
}
//# sourceMappingURL=config.js.map