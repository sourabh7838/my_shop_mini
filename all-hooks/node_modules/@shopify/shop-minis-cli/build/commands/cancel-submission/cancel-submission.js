import { renderSuccess, renderInfo, renderConfirmationPrompt, } from '@shopify/cli-kit/node/ui';
import { AbortError, handler as handleError } from '@shopify/cli-kit/node/error';
import { getPendingSubmission as graphqlGetPendingSubmission } from '../../data/get-submissions.js';
import { cancelSubmission as graphqlCancelSubmission } from '../../data/cancel-submission.js';
import { assertNetworkAndAuth } from '../../utils/common-tasks.js';
import { getRunBinCommand } from '../../utils/package-manager.js';
export const cancelSubmission = async () => {
    try {
        await assertNetworkAndAuth();
        const pendingSubmission = await graphqlGetPendingSubmission();
        if (pendingSubmission) {
            const shouldContinue = await renderConfirmationPrompt({
                message: [
                    'Are you sure you want to cancel submission',
                    { bold: pendingSubmission.reference },
                    `created ${pendingSubmission.submittedAt}?`,
                ],
            });
            if (!shouldContinue)
                return;
            const { submission: cancelledSubmission } = await graphqlCancelSubmission({
                reference: pendingSubmission.reference,
            });
            if (cancelledSubmission) {
                renderSuccess({
                    headline: 'Submission cancelled',
                    body: [
                        'Your submission with reference',
                        {
                            bold: cancelledSubmission.reference,
                        },
                        'was cancelled.',
                    ],
                });
            }
            else {
                const cancelSubmissionCmd = await getRunBinCommand('shop-minis cancel-submission');
                throw new AbortError('Failed to cancel submission.', 'Try again and if the issue continues, contact us.', [
                    `Try running "${cancelSubmissionCmd}" again`,
                    "Contact Shop if you're having issues",
                ]);
            }
        }
        else {
            renderInfo({
                headline: 'No pending submission',
                body: [
                    'If you previously had a pending submission, it may have been reviewed or already cancelled.',
                ],
            });
        }
    }
    catch (error) {
        // Always output the error first
        handleError(error);
        process.exit(1);
    }
};
//# sourceMappingURL=cancel-submission.js.map