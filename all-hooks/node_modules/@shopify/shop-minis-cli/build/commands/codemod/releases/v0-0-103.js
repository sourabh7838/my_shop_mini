import { readFile, writeFile } from 'node:fs/promises';
import path from 'node:path';
import { SemVer } from 'semver';
import { getRunBinCommand } from '../../../utils/package-manager.js';
import { execAsync } from '../../../utils/exec-async-child-process.js';
/**
 * Updates usage of renderDevelopmentMini. Use the whole mini config as param instead of just the viewer component
 *
 * Diff: https://github.com/Shopify/shop-minis-cli/compare/v0.0.102...v0.0.103
 */
async function applyUpgrade() {
    const indexTsxPath = path.join(process.cwd(), 'index.tsx');
    try {
        // add reference to MiniApp.ViewerRoot in the root index.tsx
        // we get tsc errors otherwise
        const indexTsxContent = await readFile(indexTsxPath, {
            encoding: 'utf-8',
        });
        const newIndexTsxContent = indexTsxContent
            .replace('renderDevelopmentMini(MiniApp.Root,', 'renderDevelopmentMini(MiniApp,')
            .replace('renderDevelopmentMini(MiniApp.Root || MiniApp.ViewerRoot,', 'renderDevelopmentMini(MiniApp,')
            .replace('renderDevelopmentMini(MiniApp.ViewerRoot || MiniApp.Root,', 'renderDevelopmentMini(MiniApp,')
            .replace('renderDevelopmentMini(MiniApp.ViewerRoot,', 'renderDevelopmentMini(MiniApp,');
        await writeFile(indexTsxPath, newIndexTsxContent, {
            encoding: 'utf-8',
        });
        const prettierCmd = await getRunBinCommand(`prettier -w ${indexTsxPath} ${newIndexTsxContent}`);
        await execAsync({
            cmd: prettierCmd,
        });
    }
    catch (error) {
        // If index.tsx doesn't exist or is unreadable for some reason, we don't need to do anything
    }
}
const releaseNotes = ['Update usage of renderDevelopmentMini'];
const exports = {
    releaseNotes,
    applyUpgrade,
    version: new SemVer('0.0.103'),
};
export default exports;
//# sourceMappingURL=v0-0-103.js.map